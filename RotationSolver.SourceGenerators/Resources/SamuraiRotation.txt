// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations.Basic;
[global::RotationSolver.Basic.Attributes.Jobs(global::ECommons.ExcelServices.Job.SAM)]
/// <summary>
/// <see href="https://na.finalfantasyxiv.com/jobguide/samurai"><strong>Samurai</strong></see>
/// <br>Number of Actions: 48</br>
/// <br>Number of Traits: 10</br>
/// </summary>
public abstract partial class SamuraiRotation : global::RotationSolver.Basic.Rotations.CustomRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HakazePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HakazePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHakazePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HakazePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHakazePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HakazePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HakazePvE => _HakazePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JinpuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JinpuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyJinpuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JinpuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyJinpuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JinpuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction JinpuPvE => _JinpuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShifuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShifuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShifuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShifuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShifuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShifuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShifuPvE => _ShifuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _YukikazePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.YukikazePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyYukikazePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="YukikazePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyYukikazePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.YukikazePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction YukikazePvE => _YukikazePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GekkoPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GekkoPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGekkoPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GekkoPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGekkoPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GekkoPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GekkoPvE => _GekkoPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KashaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KashaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKashaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KashaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKashaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KashaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KashaPvE => _KashaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FugaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FugaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFugaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FugaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFugaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FugaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FugaPvE => _FugaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MangetsuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MangetsuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMangetsuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MangetsuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMangetsuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MangetsuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MangetsuPvE => _MangetsuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OkaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.OkaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyOkaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OkaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyOkaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OkaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction OkaPvE => _OkaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnpiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnpiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnpiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnpiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnpiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnpiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnpiPvE => _EnpiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MidareSetsugekkaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MidareSetsugekkaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMidareSetsugekkaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MidareSetsugekkaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMidareSetsugekkaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MidareSetsugekkaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MidareSetsugekkaPvE => _MidareSetsugekkaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TenkaGokenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TenkaGokenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTenkaGokenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TenkaGokenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTenkaGokenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TenkaGokenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TenkaGokenPvE => _TenkaGokenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HiganbanaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HiganbanaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHiganbanaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HiganbanaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHiganbanaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HiganbanaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HiganbanaPvE => _HiganbanaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuShintenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuShintenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuShintenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuShintenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuShintenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuShintenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuShintenPvE => _HissatsuShintenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuKyutenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuKyutenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuKyutenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuKyutenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuKyutenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuKyutenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuKyutenPvE => _HissatsuKyutenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuGyotenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuGyotenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuGyotenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuGyotenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuGyotenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuGyotenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuGyotenPvE => _HissatsuGyotenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuYatenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuYatenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuYatenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuYatenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuYatenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuYatenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuYatenPvE => _HissatsuYatenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HagakurePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HagakurePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHagakurePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HagakurePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHagakurePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HagakurePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HagakurePvE => _HagakurePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuGurenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuGurenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuGurenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuGurenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuGurenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuGurenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuGurenPvE => _HissatsuGurenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MeditatePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MeditatePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMeditatePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MeditatePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMeditatePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MeditatePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MeditatePvE => _MeditatePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThirdEyePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ThirdEyePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyThirdEyePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThirdEyePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyThirdEyePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThirdEyePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThirdEyePvE => _ThirdEyePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MeikyoShisuiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MeikyoShisuiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMeikyoShisuiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MeikyoShisuiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMeikyoShisuiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MeikyoShisuiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MeikyoShisuiPvE => _MeikyoShisuiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _IaijutsuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.IaijutsuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyIaijutsuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="IaijutsuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyIaijutsuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.IaijutsuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction IaijutsuPvE => _IaijutsuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuSeneiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuSeneiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuSeneiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuSeneiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuSeneiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuSeneiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuSeneiPvE => _HissatsuSeneiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _IkishotenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.IkishotenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyIkishotenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="IkishotenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyIkishotenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.IkishotenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction IkishotenPvE => _IkishotenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TsubamegaeshiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TsubamegaeshiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTsubamegaeshiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TsubamegaeshiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTsubamegaeshiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TsubamegaeshiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TsubamegaeshiPvE => _TsubamegaeshiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KaeshiHiganbanaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KaeshiHiganbanaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKaeshiHiganbanaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KaeshiHiganbanaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKaeshiHiganbanaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KaeshiHiganbanaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KaeshiHiganbanaPvE => _KaeshiHiganbanaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KaeshiGokenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KaeshiGokenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKaeshiGokenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KaeshiGokenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKaeshiGokenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KaeshiGokenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KaeshiGokenPvE => _KaeshiGokenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KaeshiSetsugekkaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KaeshiSetsugekkaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKaeshiSetsugekkaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KaeshiSetsugekkaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKaeshiSetsugekkaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KaeshiSetsugekkaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KaeshiSetsugekkaPvE => _KaeshiSetsugekkaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShohaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShohaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShohaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShohaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShohaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShohaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShohaPvE => _ShohaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShohaIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShohaIiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShohaIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShohaIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShohaIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShohaIiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShohaIiPvE => _ShohaIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FukoPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FukoPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFukoPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FukoPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFukoPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FukoPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FukoPvE => _FukoPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OgiNamikiriPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.OgiNamikiriPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyOgiNamikiriPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OgiNamikiriPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyOgiNamikiriPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OgiNamikiriPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction OgiNamikiriPvE => _OgiNamikiriPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KaeshiNamikiriPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KaeshiNamikiriPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKaeshiNamikiriPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KaeshiNamikiriPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKaeshiNamikiriPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KaeshiNamikiriPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KaeshiNamikiriPvE => _KaeshiNamikiriPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _YukikazePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.YukikazePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyYukikazePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="YukikazePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyYukikazePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.YukikazePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction YukikazePvP => _YukikazePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GekkoPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GekkoPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGekkoPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GekkoPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGekkoPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GekkoPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GekkoPvP => _GekkoPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KashaPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KashaPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKashaPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KashaPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKashaPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KashaPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KashaPvP => _KashaPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HyosetsuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HyosetsuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHyosetsuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HyosetsuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHyosetsuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HyosetsuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HyosetsuPvP => _HyosetsuPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MangetsuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MangetsuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMangetsuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MangetsuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMangetsuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MangetsuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MangetsuPvP => _MangetsuPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OkaPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.OkaPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyOkaPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OkaPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyOkaPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OkaPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction OkaPvP => _OkaPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MidareSetsugekkaPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MidareSetsugekkaPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMidareSetsugekkaPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MidareSetsugekkaPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMidareSetsugekkaPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MidareSetsugekkaPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MidareSetsugekkaPvP => _MidareSetsugekkaPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OgiNamikiriPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.OgiNamikiriPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyOgiNamikiriPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OgiNamikiriPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyOgiNamikiriPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OgiNamikiriPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction OgiNamikiriPvP => _OgiNamikiriPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KaeshiNamikiriPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KaeshiNamikiriPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKaeshiNamikiriPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KaeshiNamikiriPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKaeshiNamikiriPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KaeshiNamikiriPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KaeshiNamikiriPvP => _KaeshiNamikiriPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuSotenPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuSotenPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuSotenPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuSotenPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuSotenPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuSotenPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuSotenPvP => _HissatsuSotenPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuChitenPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuChitenPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuChitenPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuChitenPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuChitenPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuChitenPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuChitenPvP => _HissatsuChitenPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MineuchiPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MineuchiPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMineuchiPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MineuchiPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMineuchiPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MineuchiPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MineuchiPvP => _MineuchiPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MeikyoShisuiPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MeikyoShisuiPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMeikyoShisuiPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MeikyoShisuiPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMeikyoShisuiPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MeikyoShisuiPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MeikyoShisuiPvP => _MeikyoShisuiPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ZantetsukenPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ZantetsukenPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyZantetsukenPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ZantetsukenPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyZantetsukenPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ZantetsukenPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ZantetsukenPvP => _ZantetsukenPvPCreator.Value;
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50208"><strong>Kenki Mastery II</strong></see> (SAM) [208]
/// <para>Increases Kenki Gauge when landing all weaponskills excluding Iaijutsu.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait KenkiMasteryIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(208U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50215"><strong>Kenki Mastery</strong></see> (SAM) [215]
/// <para>Increases Kenki Gauge when landing select weaponskills or when taking damage while under the effect of Third Eye.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait KenkiMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(215U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50277"><strong>Enhanced Iaijutsu</strong></see> (SAM) [277]
/// <para>Reduces Iaijutsu cast time to 1.3 seconds.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedIaijutsuTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(277U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50278"><strong>Enhanced Fugetsu and Fuka</strong></see> (SAM) [278]
/// <para>Improves Fugetsu's damage increase to 13% and Fuka's reduction to weaponskill cast time and recast time, spell cast time and recast time, and auto-attack delay to 13%.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedFugetsuAndFukaTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(278U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50442"><strong>Enhanced Tsubame-gaeshi</strong></see> (SAM) [442]
/// <para>Allows the accumulation of charges for consecutive uses of Tsubame-gaeshi.</para>
/// <para>Maximum Charges: 2</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedTsubamegaeshiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(442U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50443"><strong>Enhanced Meikyo Shisui</strong></see> (SAM) [443]
/// <para>Allows the accumulation of charges for consecutive uses of Meikyo Shisui.</para>
/// <para>Maximum Charges: 2</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedMeikyoShisuiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(443U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50514"><strong>Enhanced Ikishoten</strong></see> (SAM) [514]
/// <para>Grants Ogi Namikiri Ready upon execution of Ikishoten.</para>
/// <para>Duration: 30s</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedIkishotenTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(514U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50519"><strong>Fuga Mastery</strong></see> (SAM) [519]
/// <para>Upgrades Fuga to Fuko.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait FugaMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(519U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50520"><strong>Way of the Samurai</strong></see> (SAM) [520]
/// <para>Increases the potency of Hakaze to 200, Jinpu to 120, and Shifu to 120.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait WayOfTheSamuraiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(520U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50521"><strong>Way of the Samurai II</strong></see> (SAM) [521]
/// <para>Increases the potency of Gekko, Kasha, and Yukikaze to 120.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait WayOfTheSamuraiIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(521U);

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private global::RotationSolver.Basic.Traits.IBaseTrait[]? _AllTraits = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Traits.IBaseTrait[] AllTraits => _AllTraits ??= [KenkiMasteryIiTrait, KenkiMasteryTrait, EnhancedIaijutsuTrait, EnhancedFugetsuAndFukaTrait, EnhancedTsubamegaeshiTrait, EnhancedMeikyoShisuiTrait, EnhancedIkishotenTrait, FugaMasteryTrait, WayOfTheSamuraiTrait, WayOfTheSamuraiIiTrait, ..base.AllTraits];

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    static global::Dalamud.Game.ClientState.JobGauge.Types.SAMGauge JobGauge => global::ECommons.DalamudServices.Svc.Gauges.Get<global::Dalamud.Game.ClientState.JobGauge.Types.SAMGauge>();

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BraverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BraverPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBraverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BraverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBraverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BraverPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction BraverPvE => _BraverPvECreator.Value;

    /// <inheritdoc cref="BraverPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak1 => BraverPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BladedancePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BladedancePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBladedancePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BladedancePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBladedancePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BladedancePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction BladedancePvE => _BladedancePvECreator.Value;

    /// <inheritdoc cref="BladedancePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak2 => BladedancePvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DoomOfTheLivingPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DoomOfTheLivingPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDoomOfTheLivingPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DoomOfTheLivingPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDoomOfTheLivingPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DoomOfTheLivingPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction DoomOfTheLivingPvE => _DoomOfTheLivingPvECreator.Value;

    /// <inheritdoc cref="DoomOfTheLivingPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak3 => DoomOfTheLivingPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction[]? _AllBaseActions = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Actions.IBaseAction[] AllBaseActions => _AllBaseActions ??= [HakazePvE, JinpuPvE, ShifuPvE, YukikazePvE, GekkoPvE, KashaPvE, FugaPvE, MangetsuPvE, OkaPvE, EnpiPvE, MidareSetsugekkaPvE, TenkaGokenPvE, HiganbanaPvE, HissatsuShintenPvE, HissatsuKyutenPvE, HissatsuGyotenPvE, HissatsuYatenPvE, HagakurePvE, HissatsuGurenPvE, MeditatePvE, ThirdEyePvE, MeikyoShisuiPvE, IaijutsuPvE, HissatsuSeneiPvE, IkishotenPvE, TsubamegaeshiPvE, KaeshiHiganbanaPvE, KaeshiGokenPvE, KaeshiSetsugekkaPvE, ShohaPvE, ShohaIiPvE, FukoPvE, OgiNamikiriPvE, KaeshiNamikiriPvE, YukikazePvP, GekkoPvP, KashaPvP, HyosetsuPvP, MangetsuPvP, OkaPvP, MidareSetsugekkaPvP, OgiNamikiriPvP, KaeshiNamikiriPvP, HissatsuSotenPvP, HissatsuChitenPvP, MineuchiPvP, MeikyoShisuiPvP, ZantetsukenPvP, LimitBreak1, LimitBreak2, LimitBreak3, ..base.AllBaseActions];
}