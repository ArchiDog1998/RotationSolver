// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations.Duties;
/// <summary>
/// The Custom Rotation.
/// <br>Number of Actions: 395</br>
/// </summary>
[global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
public abstract partial class DutyRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagitekCannonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MagitekCannonPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMagitekCannonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagitekCannonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMagitekCannonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagitekCannonPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(1128U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MagitekCannonPvE => _MagitekCannonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PhotonStreamPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PhotonStreamPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPhotonStreamPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PhotonStreamPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPhotonStreamPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PhotonStreamPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(1129U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PhotonStreamPvE => _PhotonStreamPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PurifyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PurifyPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPurifyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PurifyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPurifyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PurifyPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(1584U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PurifyPvE => _PurifyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FestalCantPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FestalCantPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFestalCantPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FestalCantPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFestalCantPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FestalCantPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(2360U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FestalCantPvE => _FestalCantPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ToadBreathPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ToadBreathPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyToadBreathPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ToadBreathPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyToadBreathPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ToadBreathPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(2443U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ToadBreathPvE => _ToadBreathPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ImpPunchPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ImpPunchPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyImpPunchPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ImpPunchPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyImpPunchPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ImpPunchPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(3139U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ImpPunchPvE => _ImpPunchPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _QuickchantPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.QuickchantPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyQuickchantPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="QuickchantPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyQuickchantPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.QuickchantPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(3504U)]
    public global::RotationSolver.Basic.Actions.IBaseAction QuickchantPvE => _QuickchantPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BrowbeatPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BrowbeatPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBrowbeatPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BrowbeatPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBrowbeatPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BrowbeatPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(5475U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BrowbeatPvE => _BrowbeatPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ApothecaryPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ApothecaryPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyApothecaryPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ApothecaryPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyApothecaryPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ApothecaryPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(5476U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ApothecaryPvE => _ApothecaryPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WingCutterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WingCutterPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWingCutterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WingCutterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWingCutterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WingCutterPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(5477U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WingCutterPvE => _WingCutterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PummelPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PummelPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPummelPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PummelPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPummelPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PummelPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(6273U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PummelPvE => _PummelPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VoidFireIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VoidFireIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVoidFireIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VoidFireIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVoidFireIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VoidFireIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(6274U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VoidFireIiPvE => _VoidFireIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeavenlyJudgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeavenlyJudgePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHeavenlyJudgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeavenlyJudgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHeavenlyJudgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeavenlyJudgePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(6871U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HeavenlyJudgePvE => _HeavenlyJudgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagitekCannonPvE_7619Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MagitekCannonPvE_7619, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMagitekCannonPvE_7619(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagitekCannonPvE_7619"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMagitekCannonPvE_7619(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagitekCannonPvE_7619"/>
    [global::RotationSolver.Basic.Attributes.ID(7619U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MagitekCannonPvE_7619 => _MagitekCannonPvE_7619Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PhotonStreamPvE_7620Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PhotonStreamPvE_7620, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPhotonStreamPvE_7620(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PhotonStreamPvE_7620"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPhotonStreamPvE_7620(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PhotonStreamPvE_7620"/>
    [global::RotationSolver.Basic.Attributes.ID(7620U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PhotonStreamPvE_7620 => _PhotonStreamPvE_7620Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DiffractiveMagitekCannonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DiffractiveMagitekCannonPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDiffractiveMagitekCannonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DiffractiveMagitekCannonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDiffractiveMagitekCannonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DiffractiveMagitekCannonPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(7621U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DiffractiveMagitekCannonPvE => _DiffractiveMagitekCannonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HighpoweredMagitekCannonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HighpoweredMagitekCannonPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHighpoweredMagitekCannonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HighpoweredMagitekCannonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHighpoweredMagitekCannonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HighpoweredMagitekCannonPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(7622U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HighpoweredMagitekCannonPvE => _HighpoweredMagitekCannonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SmokeScreenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SmokeScreenPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySmokeScreenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SmokeScreenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySmokeScreenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SmokeScreenPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(7816U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SmokeScreenPvE => _SmokeScreenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VrilPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VrilPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVrilPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VrilPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVrilPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VrilPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(8517U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VrilPvE => _VrilPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagitekPulsePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MagitekPulsePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMagitekPulsePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagitekPulsePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMagitekPulsePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagitekPulsePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(8624U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MagitekPulsePvE => _MagitekPulsePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagitekThunderPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MagitekThunderPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMagitekThunderPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagitekThunderPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMagitekThunderPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagitekThunderPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(8625U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MagitekThunderPvE => _MagitekThunderPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ImpPunchPvE_9035Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ImpPunchPvE_9035, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyImpPunchPvE_9035(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ImpPunchPvE_9035"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyImpPunchPvE_9035(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ImpPunchPvE_9035"/>
    [global::RotationSolver.Basic.Attributes.ID(9035U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ImpPunchPvE_9035 => _ImpPunchPvE_9035Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AntigravityGimbalPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AntigravityGimbalPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAntigravityGimbalPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AntigravityGimbalPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAntigravityGimbalPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AntigravityGimbalPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(9066U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AntigravityGimbalPvE => _AntigravityGimbalPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AethericSiphonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AethericSiphonPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAethericSiphonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AethericSiphonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAethericSiphonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AethericSiphonPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(9102U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AethericSiphonPvE => _AethericSiphonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VrilPvE_9345Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VrilPvE_9345, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVrilPvE_9345(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VrilPvE_9345"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVrilPvE_9345(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VrilPvE_9345"/>
    [global::RotationSolver.Basic.Attributes.ID(9345U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VrilPvE_9345 => _VrilPvE_9345Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AntigravityGimbalPvE_9483Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AntigravityGimbalPvE_9483, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAntigravityGimbalPvE_9483(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AntigravityGimbalPvE_9483"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAntigravityGimbalPvE_9483(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AntigravityGimbalPvE_9483"/>
    [global::RotationSolver.Basic.Attributes.ID(9483U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AntigravityGimbalPvE_9483 => _AntigravityGimbalPvE_9483Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShatterstonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShatterstonePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShatterstonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShatterstonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShatterstonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShatterstonePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(9823U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ShatterstonePvE => _ShatterstonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeflectPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeflectPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeflectPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeflectPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeflectPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeflectPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10006U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeflectPvE => _DeflectPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MegaPotionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MegaPotionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMegaPotionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MegaPotionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMegaPotionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MegaPotionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10229U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MegaPotionPvE => _MegaPotionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RedPaintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RedPaintPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRedPaintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RedPaintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRedPaintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RedPaintPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10262U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RedPaintPvE => _RedPaintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _YellowPaintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.YellowPaintPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyYellowPaintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="YellowPaintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyYellowPaintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.YellowPaintPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10263U)]
    public global::RotationSolver.Basic.Actions.IBaseAction YellowPaintPvE => _YellowPaintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BlackPaintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BlackPaintPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBlackPaintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BlackPaintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBlackPaintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BlackPaintPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10264U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BlackPaintPvE => _BlackPaintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BluePaintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BluePaintPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBluePaintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BluePaintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBluePaintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BluePaintPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10265U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BluePaintPvE => _BluePaintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ChocoboBrushPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ChocoboBrushPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyChocoboBrushPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ChocoboBrushPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyChocoboBrushPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ChocoboBrushPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10401U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ChocoboBrushPvE => _ChocoboBrushPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CheerJumpPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CheerJumpPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCheerJumpPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CheerJumpPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCheerJumpPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CheerJumpPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10713U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CheerJumpPvE => _CheerJumpPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CheerWavePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CheerWavePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCheerWavePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CheerWavePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCheerWavePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CheerWavePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10714U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CheerWavePvE => _CheerWavePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CheerOnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CheerOnPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCheerOnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CheerOnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCheerOnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CheerOnPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(10715U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CheerOnPvE => _CheerOnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CheerJumpPvE_10716Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CheerJumpPvE_10716, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCheerJumpPvE_10716(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CheerJumpPvE_10716"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCheerJumpPvE_10716(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CheerJumpPvE_10716"/>
    [global::RotationSolver.Basic.Attributes.ID(10716U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CheerJumpPvE_10716 => _CheerJumpPvE_10716Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CheerWavePvE_10717Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CheerWavePvE_10717, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCheerWavePvE_10717(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CheerWavePvE_10717"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCheerWavePvE_10717(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CheerWavePvE_10717"/>
    [global::RotationSolver.Basic.Attributes.ID(10717U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CheerWavePvE_10717 => _CheerWavePvE_10717Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CheerOnPvE_10718Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CheerOnPvE_10718, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCheerOnPvE_10718(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CheerOnPvE_10718"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCheerOnPvE_10718(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CheerOnPvE_10718"/>
    [global::RotationSolver.Basic.Attributes.ID(10718U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CheerOnPvE_10718 => _CheerOnPvE_10718Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CurtainCallPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CurtainCallPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCurtainCallPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CurtainCallPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCurtainCallPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CurtainCallPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(11063U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CurtainCallPvE => _CurtainCallPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RuinIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RuinIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRuinIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RuinIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRuinIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RuinIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(11191U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RuinIiiPvE => _RuinIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PhysickPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PhysickPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPhysickPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PhysickPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPhysickPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PhysickPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(11192U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PhysickPvE => _PhysickPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TrishacklePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TrishacklePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTrishacklePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TrishacklePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTrishacklePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TrishacklePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(11482U)]
    public global::RotationSolver.Basic.Actions.IBaseAction TrishacklePvE => _TrishacklePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MogHeavenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MogHeavenPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMogHeavenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MogHeavenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMogHeavenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MogHeavenPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12577U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MogHeavenPvE => _MogHeavenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BringItPomPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BringItPomPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBringItPomPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BringItPomPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBringItPomPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BringItPomPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12578U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BringItPomPvE => _BringItPomPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OmegaJammerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.OmegaJammerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyOmegaJammerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OmegaJammerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyOmegaJammerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OmegaJammerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12911U)]
    public global::RotationSolver.Basic.Actions.IBaseAction OmegaJammerPvE => _OmegaJammerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheAetherweaverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheAetherweaverPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheAetherweaverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheAetherweaverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheAetherweaverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheAetherweaverPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12958U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheAetherweaverPvE => _WisdomOfTheAetherweaverPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheMartialistPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheMartialistPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheMartialistPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheMartialistPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheMartialistPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheMartialistPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12959U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheMartialistPvE => _WisdomOfTheMartialistPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfThePlatebearerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfThePlatebearerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfThePlatebearerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfThePlatebearerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfThePlatebearerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfThePlatebearerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12960U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfThePlatebearerPvE => _WisdomOfThePlatebearerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheGuardianPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheGuardianPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheGuardianPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheGuardianPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheGuardianPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheGuardianPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12961U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheGuardianPvE => _WisdomOfTheGuardianPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheOrdainedPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheOrdainedPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheOrdainedPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheOrdainedPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheOrdainedPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheOrdainedPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12962U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheOrdainedPvE => _WisdomOfTheOrdainedPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheSkirmisherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheSkirmisherPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheSkirmisherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheSkirmisherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheSkirmisherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheSkirmisherPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12963U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheSkirmisherPvE => _WisdomOfTheSkirmisherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheWatcherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheWatcherPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheWatcherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheWatcherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheWatcherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheWatcherPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12964U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheWatcherPvE => _WisdomOfTheWatcherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheTemplarPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheTemplarPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheTemplarPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheTemplarPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheTemplarPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheTemplarPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12965U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheTemplarPvE => _WisdomOfTheTemplarPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheIrregularPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheIrregularPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheIrregularPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheIrregularPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheIrregularPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheIrregularPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12966U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheIrregularPvE => _WisdomOfTheIrregularPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheBreathtakerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheBreathtakerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheBreathtakerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheBreathtakerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheBreathtakerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheBreathtakerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12967U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheBreathtakerPvE => _WisdomOfTheBreathtakerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpiritOfTheRememberedPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpiritOfTheRememberedPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpiritOfTheRememberedPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpiritOfTheRememberedPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpiritOfTheRememberedPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpiritOfTheRememberedPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12968U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SpiritOfTheRememberedPvE => _SpiritOfTheRememberedPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ProtectLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ProtectLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyProtectLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ProtectLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyProtectLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ProtectLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12969U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ProtectLPvE => _ProtectLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShellLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShellLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShellLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShellLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShellLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShellLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12970U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ShellLPvE => _ShellLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeathLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeathLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeathLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeathLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeathLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeathLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12971U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeathLPvE => _DeathLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FocusLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FocusLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFocusLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FocusLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFocusLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FocusLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12972U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FocusLPvE => _FocusLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ParalyzeLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ParalyzeLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyParalyzeLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ParalyzeLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyParalyzeLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ParalyzeLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12973U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ParalyzeLPvE => _ParalyzeLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ParalyzeLIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ParalyzeLIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyParalyzeLIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ParalyzeLIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyParalyzeLIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ParalyzeLIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12974U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ParalyzeLIiiPvE => _ParalyzeLIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SwiftLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySwiftLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySwiftLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12975U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftLPvE => _SwiftLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FeatherfootLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FeatherfootLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFeatherfootLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FeatherfootLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFeatherfootLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FeatherfootLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12976U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FeatherfootLPvE => _FeatherfootLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpiritDartLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpiritDartLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpiritDartLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpiritDartLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpiritDartLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpiritDartLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12977U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SpiritDartLPvE => _SpiritDartLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CatastropheLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CatastropheLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCatastropheLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CatastropheLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCatastropheLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CatastropheLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12978U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CatastropheLPvE => _CatastropheLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DispelLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DispelLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDispelLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DispelLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDispelLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DispelLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12979U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DispelLPvE => _DispelLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FeintLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FeintLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFeintLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FeintLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFeintLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FeintLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12980U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FeintLPvE => _FeintLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StealthLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StealthLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyStealthLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StealthLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyStealthLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StealthLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12981U)]
    public global::RotationSolver.Basic.Actions.IBaseAction StealthLPvE => _StealthLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AetherialManipulationLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AetherialManipulationLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAetherialManipulationLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AetherialManipulationLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAetherialManipulationLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AetherialManipulationLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12982U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AetherialManipulationLPvE => _AetherialManipulationLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BackstepLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BackstepLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBackstepLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BackstepLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBackstepLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BackstepLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12983U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BackstepLPvE => _BackstepLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TranquilizerLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TranquilizerLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTranquilizerLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TranquilizerLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTranquilizerLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TranquilizerLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12984U)]
    public global::RotationSolver.Basic.Actions.IBaseAction TranquilizerLPvE => _TranquilizerLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BloodbathLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BloodbathLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBloodbathLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BloodbathLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBloodbathLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BloodbathLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12985U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BloodbathLPvE => _BloodbathLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RejuvenateLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RejuvenateLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRejuvenateLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RejuvenateLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRejuvenateLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RejuvenateLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12986U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RejuvenateLPvE => _RejuvenateLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HaymakerLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HaymakerLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHaymakerLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HaymakerLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHaymakerLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HaymakerLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12987U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HaymakerLPvE => _HaymakerLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RapidRecastLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RapidRecastLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRapidRecastLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RapidRecastLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRapidRecastLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RapidRecastLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12988U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RapidRecastLPvE => _RapidRecastLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CureLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CureLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCureLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CureLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCureLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CureLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12989U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CureLPvE => _CureLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CureLIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CureLIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCureLIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CureLIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCureLIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CureLIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12990U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CureLIiPvE => _CureLIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StoneskinLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StoneskinLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyStoneskinLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StoneskinLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyStoneskinLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StoneskinLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12991U)]
    public global::RotationSolver.Basic.Actions.IBaseAction StoneskinLPvE => _StoneskinLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CureLIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CureLIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCureLIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CureLIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCureLIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CureLIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12992U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CureLIiiPvE => _CureLIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RegenLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RegenLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRegenLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RegenLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRegenLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RegenLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12993U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RegenLPvE => _RegenLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EsunaLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EsunaLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEsunaLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EsunaLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEsunaLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EsunaLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12994U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EsunaLPvE => _EsunaLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _IncenseLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.IncenseLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyIncenseLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="IncenseLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyIncenseLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.IncenseLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12995U)]
    public global::RotationSolver.Basic.Actions.IBaseAction IncenseLPvE => _IncenseLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RaiseLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RaiseLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRaiseLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RaiseLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRaiseLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RaiseLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12996U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RaiseLPvE => _RaiseLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BraveryLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BraveryLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBraveryLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BraveryLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBraveryLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BraveryLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12997U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BraveryLPvE => _BraveryLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SolidShieldLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SolidShieldLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySolidShieldLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SolidShieldLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySolidShieldLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SolidShieldLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12998U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SolidShieldLPvE => _SolidShieldLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpellShieldLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpellShieldLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpellShieldLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpellShieldLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpellShieldLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpellShieldLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(12999U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SpellShieldLPvE => _SpellShieldLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReflectLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReflectLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyReflectLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReflectLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyReflectLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReflectLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13000U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ReflectLPvE => _ReflectLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SmiteLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SmiteLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySmiteLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SmiteLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySmiteLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SmiteLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13001U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SmiteLPvE => _SmiteLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RefreshLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RefreshLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRefreshLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RefreshLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRefreshLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RefreshLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13002U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RefreshLPvE => _RefreshLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BanishLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BanishLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBanishLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BanishLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBanishLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BanishLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13003U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BanishLPvE => _BanishLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BanishLIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BanishLIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBanishLIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BanishLIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBanishLIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BanishLIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13004U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BanishLIiiPvE => _BanishLIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagicBurstLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MagicBurstLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMagicBurstLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagicBurstLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMagicBurstLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagicBurstLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13005U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MagicBurstLPvE => _MagicBurstLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DoubleEdgeLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DoubleEdgeLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDoubleEdgeLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DoubleEdgeLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDoubleEdgeLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DoubleEdgeLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13006U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DoubleEdgeLPvE => _DoubleEdgeLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EagleEyeShotLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EagleEyeShotLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEagleEyeShotLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EagleEyeShotLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEagleEyeShotLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EagleEyeShotLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13007U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EagleEyeShotLPvE => _EagleEyeShotLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TricksomeTreatPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TricksomeTreatPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTricksomeTreatPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TricksomeTreatPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTricksomeTreatPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TricksomeTreatPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13265U)]
    public global::RotationSolver.Basic.Actions.IBaseAction TricksomeTreatPvE => _TricksomeTreatPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UnveilPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.UnveilPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyUnveilPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UnveilPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyUnveilPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UnveilPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13266U)]
    public global::RotationSolver.Basic.Actions.IBaseAction UnveilPvE => _UnveilPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StoneIvOfTheSeventhDawnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StoneIvOfTheSeventhDawnPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyStoneIvOfTheSeventhDawnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StoneIvOfTheSeventhDawnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyStoneIvOfTheSeventhDawnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StoneIvOfTheSeventhDawnPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13423U)]
    public global::RotationSolver.Basic.Actions.IBaseAction StoneIvOfTheSeventhDawnPvE => _StoneIvOfTheSeventhDawnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AeroIiOfTheSeventhDawnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AeroIiOfTheSeventhDawnPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAeroIiOfTheSeventhDawnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AeroIiOfTheSeventhDawnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAeroIiOfTheSeventhDawnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AeroIiOfTheSeventhDawnPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13424U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AeroIiOfTheSeventhDawnPvE => _AeroIiOfTheSeventhDawnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CureIiOfTheSeventhDawnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CureIiOfTheSeventhDawnPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCureIiOfTheSeventhDawnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CureIiOfTheSeventhDawnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCureIiOfTheSeventhDawnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CureIiOfTheSeventhDawnPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13425U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CureIiOfTheSeventhDawnPvE => _CureIiOfTheSeventhDawnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AetherwellPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AetherwellPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAetherwellPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AetherwellPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAetherwellPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AetherwellPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(13426U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AetherwellPvE => _AetherwellPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeavenlySwordPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeavenlySwordPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHeavenlySwordPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeavenlySwordPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHeavenlySwordPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeavenlySwordPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14414U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HeavenlySwordPvE => _HeavenlySwordPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeavenlyShieldPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeavenlyShieldPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHeavenlyShieldPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeavenlyShieldPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHeavenlyShieldPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeavenlyShieldPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14415U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HeavenlyShieldPvE => _HeavenlyShieldPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PerceptionLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PerceptionLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPerceptionLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PerceptionLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPerceptionLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PerceptionLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14476U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PerceptionLPvE => _PerceptionLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheElderPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheElderPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheElderPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheElderPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheElderPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheElderPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14477U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheElderPvE => _WisdomOfTheElderPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheDuelistPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheDuelistPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheDuelistPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheDuelistPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheDuelistPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheDuelistPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14478U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheDuelistPvE => _WisdomOfTheDuelistPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheFiendhunterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheFiendhunterPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheFiendhunterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheFiendhunterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheFiendhunterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheFiendhunterPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14479U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheFiendhunterPvE => _WisdomOfTheFiendhunterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WisdomOfTheIndomitablePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WisdomOfTheIndomitablePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWisdomOfTheIndomitablePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WisdomOfTheIndomitablePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWisdomOfTheIndomitablePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WisdomOfTheIndomitablePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14480U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WisdomOfTheIndomitablePvE => _WisdomOfTheIndomitablePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SacrificeLPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SacrificeLPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySacrificeLPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SacrificeLPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySacrificeLPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SacrificeLPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14481U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SacrificeLPvE => _SacrificeLPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WarpstrikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WarpstrikePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWarpstrikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WarpstrikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWarpstrikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WarpstrikePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14597U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WarpstrikePvE => _WarpstrikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KyokufuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KyokufuPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKyokufuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KyokufuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKyokufuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KyokufuPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14840U)]
    public global::RotationSolver.Basic.Actions.IBaseAction KyokufuPvE => _KyokufuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AjisaiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AjisaiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAjisaiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AjisaiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAjisaiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AjisaiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14841U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AjisaiPvE => _AjisaiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HissatsuGyotenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HissatsuGyotenPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHissatsuGyotenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HissatsuGyotenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHissatsuGyotenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HissatsuGyotenPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(14842U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HissatsuGyotenPvE => _HissatsuGyotenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SecondWindPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SecondWindPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySecondWindPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SecondWindPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySecondWindPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SecondWindPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(15375U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SecondWindPvE => _SecondWindPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _InterjectPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.InterjectPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyInterjectPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="InterjectPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyInterjectPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.InterjectPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(15537U)]
    public global::RotationSolver.Basic.Actions.IBaseAction InterjectPvE => _InterjectPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PresentPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PresentPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPresentPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PresentPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPresentPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PresentPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(15553U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PresentPvE => _PresentPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FightOrFlightPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FightOrFlightPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFightOrFlightPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FightOrFlightPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFightOrFlightPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FightOrFlightPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(15870U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FightOrFlightPvE => _FightOrFlightPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RightfulSwordPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RightfulSwordPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRightfulSwordPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RightfulSwordPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRightfulSwordPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RightfulSwordPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16269U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RightfulSwordPvE => _RightfulSwordPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BrutalShellPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BrutalShellPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBrutalShellPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BrutalShellPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBrutalShellPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BrutalShellPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16418U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BrutalShellPvE => _BrutalShellPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KeenEdgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KeenEdgePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKeenEdgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KeenEdgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKeenEdgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KeenEdgePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16434U)]
    public global::RotationSolver.Basic.Actions.IBaseAction KeenEdgePvE => _KeenEdgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SolidBarrelPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySolidBarrelPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SolidBarrelPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySolidBarrelPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16435U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SolidBarrelPvE => _SolidBarrelPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SoothingPotionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SoothingPotionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySoothingPotionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SoothingPotionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySoothingPotionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SoothingPotionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16436U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SoothingPotionPvE => _SoothingPotionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShiningBladePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShiningBladePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShiningBladePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShiningBladePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShiningBladePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShiningBladePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16437U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ShiningBladePvE => _ShiningBladePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PerfectDeceptionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PerfectDeceptionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPerfectDeceptionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PerfectDeceptionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPerfectDeceptionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PerfectDeceptionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16438U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PerfectDeceptionPvE => _PerfectDeceptionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LeapOfFaithPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LeapOfFaithPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLeapOfFaithPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LeapOfFaithPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLeapOfFaithPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LeapOfFaithPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16439U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LeapOfFaithPvE => _LeapOfFaithPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanFireIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanFireIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanFireIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanFireIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanFireIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanFireIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16574U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanFireIiiPvE => _RonkanFireIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanBlizzardIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanBlizzardIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanBlizzardIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanBlizzardIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanBlizzardIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanBlizzardIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16575U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanBlizzardIiiPvE => _RonkanBlizzardIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanThunderIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanThunderIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanThunderIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanThunderIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanThunderIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanThunderIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16576U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanThunderIiiPvE => _RonkanThunderIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanFlarePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanFlarePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanFlarePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanFlarePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanFlarePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanFlarePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16577U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanFlarePvE => _RonkanFlarePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FastBladePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FastBladePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFastBladePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FastBladePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFastBladePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FastBladePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16788U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FastBladePvE => _FastBladePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SunshadowPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SunshadowPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySunshadowPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SunshadowPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySunshadowPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SunshadowPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16789U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SunshadowPvE => _SunshadowPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RoughDividePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RoughDividePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRoughDividePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RoughDividePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRoughDividePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RoughDividePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16804U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RoughDividePvE => _RoughDividePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwashbucklerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SwashbucklerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySwashbucklerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwashbucklerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySwashbucklerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwashbucklerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16984U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SwashbucklerPvE => _SwashbucklerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GreatestEclipsePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GreatestEclipsePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGreatestEclipsePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GreatestEclipsePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGreatestEclipsePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GreatestEclipsePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(16985U)]
    public global::RotationSolver.Basic.Actions.IBaseAction GreatestEclipsePvE => _GreatestEclipsePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanCureIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanCureIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanCureIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanCureIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanCureIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanCureIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17000U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanCureIiPvE => _RonkanCureIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanMedicaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanMedicaPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanMedicaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanMedicaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanMedicaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanMedicaPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17001U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanMedicaPvE => _RonkanMedicaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanEsunaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanEsunaPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanEsunaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanEsunaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanEsunaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanEsunaPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17002U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanEsunaPvE => _RonkanEsunaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanStoneIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanStoneIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanStoneIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanStoneIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanStoneIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanStoneIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17003U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanStoneIiPvE => _RonkanStoneIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RonkanRenewPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RonkanRenewPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRonkanRenewPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RonkanRenewPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRonkanRenewPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RonkanRenewPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17004U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RonkanRenewPvE => _RonkanRenewPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AcidicBitePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AcidicBitePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAcidicBitePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AcidicBitePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAcidicBitePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AcidicBitePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17122U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AcidicBitePvE => _AcidicBitePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeavyShotPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeavyShotPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHeavyShotPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeavyShotPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHeavyShotPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeavyShotPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17123U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HeavyShotPvE => _HeavyShotPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RadiantArrowPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RadiantArrowPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRadiantArrowPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RadiantArrowPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRadiantArrowPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RadiantArrowPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17124U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RadiantArrowPvE => _RadiantArrowPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DullingArrowPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DullingArrowPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDullingArrowPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DullingArrowPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDullingArrowPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DullingArrowPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17125U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DullingArrowPvE => _DullingArrowPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ChivalrousSpiritPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ChivalrousSpiritPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyChivalrousSpiritPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ChivalrousSpiritPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyChivalrousSpiritPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ChivalrousSpiritPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17236U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ChivalrousSpiritPvE => _ChivalrousSpiritPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SouldeepInvisibilityPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SouldeepInvisibilityPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySouldeepInvisibilityPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SouldeepInvisibilityPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySouldeepInvisibilityPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SouldeepInvisibilityPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17291U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SouldeepInvisibilityPvE => _SouldeepInvisibilityPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersPrudencePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HuntersPrudencePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHuntersPrudencePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersPrudencePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHuntersPrudencePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersPrudencePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17596U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersPrudencePvE => _HuntersPrudencePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NebulaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NebulaPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyNebulaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NebulaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyNebulaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NebulaPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17839U)]
    public global::RotationSolver.Basic.Actions.IBaseAction NebulaPvE => _NebulaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SmackdownPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SmackdownPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySmackdownPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SmackdownPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySmackdownPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SmackdownPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(17901U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SmackdownPvE => _SmackdownPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DoomSpikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DoomSpikePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDoomSpikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DoomSpikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDoomSpikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DoomSpikePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18772U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DoomSpikePvE => _DoomSpikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SonicThrustPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SonicThrustPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySonicThrustPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SonicThrustPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySonicThrustPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SonicThrustPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18773U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SonicThrustPvE => _SonicThrustPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CoerthanTormentPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CoerthanTormentPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCoerthanTormentPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CoerthanTormentPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCoerthanTormentPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CoerthanTormentPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18774U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CoerthanTormentPvE => _CoerthanTormentPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SkydragonDivePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SkydragonDivePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySkydragonDivePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SkydragonDivePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySkydragonDivePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SkydragonDivePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18775U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SkydragonDivePvE => _SkydragonDivePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AlaMornPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AlaMornPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAlaMornPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AlaMornPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAlaMornPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AlaMornPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18776U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AlaMornPvE => _AlaMornPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DrachenlancePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DrachenlancePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDrachenlancePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DrachenlancePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDrachenlancePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DrachenlancePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18777U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DrachenlancePvE => _DrachenlancePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HorridRoarPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HorridRoarPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHorridRoarPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HorridRoarPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHorridRoarPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HorridRoarPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18778U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HorridRoarPvE => _HorridRoarPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StardiverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StardiverPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyStardiverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StardiverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyStardiverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StardiverPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18780U)]
    public global::RotationSolver.Basic.Actions.IBaseAction StardiverPvE => _StardiverPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SolicitSiphonSnoutPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SolicitSiphonSnoutPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySolicitSiphonSnoutPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SolicitSiphonSnoutPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySolicitSiphonSnoutPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SolicitSiphonSnoutPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(18813U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SolicitSiphonSnoutPvE => _SolicitSiphonSnoutPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeflectPvE_18863Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeflectPvE_18863, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeflectPvE_18863(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeflectPvE_18863"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeflectPvE_18863(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeflectPvE_18863"/>
    [global::RotationSolver.Basic.Attributes.ID(18863U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeflectPvE_18863 => _DeflectPvE_18863Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GofuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GofuPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGofuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GofuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGofuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GofuPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19046U)]
    public global::RotationSolver.Basic.Actions.IBaseAction GofuPvE => _GofuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _YagetsuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.YagetsuPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyYagetsuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="YagetsuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyYagetsuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.YagetsuPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19047U)]
    public global::RotationSolver.Basic.Actions.IBaseAction YagetsuPvE => _YagetsuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AquaVitaePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AquaVitaePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAquaVitaePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AquaVitaePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAquaVitaePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AquaVitaePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19218U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AquaVitaePvE => _AquaVitaePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RemoveCostumePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RemoveCostumePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRemoveCostumePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RemoveCostumePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRemoveCostumePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RemoveCostumePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19731U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RemoveCostumePvE => _RemoveCostumePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StandFirmPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StandFirmPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyStandFirmPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StandFirmPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyStandFirmPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StandFirmPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19994U)]
    public global::RotationSolver.Basic.Actions.IBaseAction StandFirmPvE => _StandFirmPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SeizePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SeizePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySeizePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SeizePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySeizePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SeizePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19997U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SeizePvE => _SeizePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BirdlimePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BirdlimePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBirdlimePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BirdlimePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBirdlimePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BirdlimePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(19998U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BirdlimePvE => _BirdlimePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BlackPaintPvE_20304Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BlackPaintPvE_20304, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBlackPaintPvE_20304(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BlackPaintPvE_20304"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBlackPaintPvE_20304(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BlackPaintPvE_20304"/>
    [global::RotationSolver.Basic.Attributes.ID(20304U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BlackPaintPvE_20304 => _BlackPaintPvE_20304Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AetherCannonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AetherCannonPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAetherCannonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AetherCannonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAetherCannonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AetherCannonPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20489U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AetherCannonPvE => _AetherCannonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AethersaberPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AethersaberPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAethersaberPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AethersaberPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAethersaberPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AethersaberPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20490U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AethersaberPvE => _AethersaberPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AethercutPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AethercutPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAethercutPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AethercutPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAethercutPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AethercutPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20491U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AethercutPvE => _AethercutPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FinalFlourishPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FinalFlourishPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFinalFlourishPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FinalFlourishPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFinalFlourishPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FinalFlourishPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20492U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FinalFlourishPvE => _FinalFlourishPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UltimaBusterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.UltimaBusterPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyUltimaBusterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UltimaBusterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyUltimaBusterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UltimaBusterPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20493U)]
    public global::RotationSolver.Basic.Actions.IBaseAction UltimaBusterPvE => _UltimaBusterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PyreticBoosterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PyreticBoosterPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPyreticBoosterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PyreticBoosterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPyreticBoosterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PyreticBoosterPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20494U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PyreticBoosterPvE => _PyreticBoosterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AetherialAegisPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AetherialAegisPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAetherialAegisPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AetherialAegisPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAetherialAegisPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AetherialAegisPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20495U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AetherialAegisPvE => _AetherialAegisPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AetherMinePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AetherMinePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAetherMinePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AetherMinePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAetherMinePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AetherMinePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20496U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AetherMinePvE => _AetherMinePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerfirePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerfirePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerfirePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerfirePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerfirePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerfirePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20529U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerfirePvE => _VerfirePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VeraeroPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VeraeroPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVeraeroPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VeraeroPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVeraeroPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VeraeroPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20530U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VeraeroPvE => _VeraeroPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerstonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerstonePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerstonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerstonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerstonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerstonePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20531U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerstonePvE => _VerstonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerflarePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerflarePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerflarePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerflarePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerflarePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerflarePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20532U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerflarePvE => _VerflarePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CrimsonSaviorPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CrimsonSaviorPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCrimsonSaviorPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CrimsonSaviorPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCrimsonSaviorPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CrimsonSaviorPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20533U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CrimsonSaviorPvE => _CrimsonSaviorPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostParalyzeIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostParalyzeIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostParalyzeIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostParalyzeIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostParalyzeIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostParalyzeIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20701U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostParalyzeIiiPvE => _LostParalyzeIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostBanishIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostBanishIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostBanishIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostBanishIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostBanishIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostBanishIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20702U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostBanishIiiPvE => _LostBanishIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostManawallPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostManawallPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostManawallPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostManawallPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostManawallPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostManawallPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20703U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostManawallPvE => _LostManawallPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostDispelPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostDispelPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostDispelPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostDispelPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostDispelPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostDispelPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20704U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostDispelPvE => _LostDispelPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostStealthPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostStealthPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostStealthPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostStealthPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostStealthPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostStealthPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20705U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostStealthPvE => _LostStealthPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostSpellforgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostSpellforgePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostSpellforgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostSpellforgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostSpellforgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostSpellforgePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20706U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostSpellforgePvE => _LostSpellforgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostSteelstingPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostSteelstingPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostSteelstingPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostSteelstingPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostSteelstingPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostSteelstingPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20707U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostSteelstingPvE => _LostSteelstingPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostSwiftPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostSwiftPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostSwiftPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostSwiftPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostSwiftPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostSwiftPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20708U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostSwiftPvE => _LostSwiftPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostProtectPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostProtectPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostProtectPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostProtectPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostProtectPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostProtectPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20709U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostProtectPvE => _LostProtectPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostShellPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostShellPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostShellPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostShellPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostShellPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostShellPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20710U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostShellPvE => _LostShellPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostReflectPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostReflectPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostReflectPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostReflectPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostReflectPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostReflectPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20711U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostReflectPvE => _LostReflectPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostStoneskinPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostStoneskinPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostStoneskinPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostStoneskinPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostStoneskinPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostStoneskinPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20712U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostStoneskinPvE => _LostStoneskinPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostBraveryPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostBraveryPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostBraveryPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostBraveryPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostBraveryPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostBraveryPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20713U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostBraveryPvE => _LostBraveryPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFocusPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFocusPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFocusPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFocusPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFocusPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFocusPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20714U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFocusPvE => _LostFocusPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFontOfMagicPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFontOfMagicPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFontOfMagicPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFontOfMagicPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFontOfMagicPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFontOfMagicPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20715U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFontOfMagicPvE => _LostFontOfMagicPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFontOfSkillPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFontOfSkillPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFontOfSkillPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFontOfSkillPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFontOfSkillPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFontOfSkillPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20716U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFontOfSkillPvE => _LostFontOfSkillPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFontOfPowerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFontOfPowerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFontOfPowerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFontOfPowerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFontOfPowerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFontOfPowerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20717U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFontOfPowerPvE => _LostFontOfPowerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostSlashPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostSlashPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostSlashPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostSlashPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostSlashPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostSlashPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20718U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostSlashPvE => _LostSlashPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostDeathPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostDeathPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostDeathPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostDeathPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostDeathPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostDeathPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20719U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostDeathPvE => _LostDeathPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BannerOfNobleEndsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BannerOfNobleEndsPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBannerOfNobleEndsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BannerOfNobleEndsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBannerOfNobleEndsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BannerOfNobleEndsPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20720U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BannerOfNobleEndsPvE => _BannerOfNobleEndsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BannerOfHonoredSacrificePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BannerOfHonoredSacrificePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBannerOfHonoredSacrificePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BannerOfHonoredSacrificePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBannerOfHonoredSacrificePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BannerOfHonoredSacrificePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20721U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BannerOfHonoredSacrificePvE => _BannerOfHonoredSacrificePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BannerOfTirelessConvictionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BannerOfTirelessConvictionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBannerOfTirelessConvictionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BannerOfTirelessConvictionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBannerOfTirelessConvictionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BannerOfTirelessConvictionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20722U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BannerOfTirelessConvictionPvE => _BannerOfTirelessConvictionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BannerOfFirmResolvePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BannerOfFirmResolvePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBannerOfFirmResolvePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BannerOfFirmResolvePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBannerOfFirmResolvePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BannerOfFirmResolvePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20723U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BannerOfFirmResolvePvE => _BannerOfFirmResolvePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BannerOfSolemnClarityPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BannerOfSolemnClarityPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBannerOfSolemnClarityPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BannerOfSolemnClarityPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBannerOfSolemnClarityPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BannerOfSolemnClarityPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20724U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BannerOfSolemnClarityPvE => _BannerOfSolemnClarityPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BannerOfHonedAcuityPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BannerOfHonedAcuityPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBannerOfHonedAcuityPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BannerOfHonedAcuityPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBannerOfHonedAcuityPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BannerOfHonedAcuityPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20725U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BannerOfHonedAcuityPvE => _BannerOfHonedAcuityPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostCurePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostCurePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostCurePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostCurePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostCurePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostCurePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20726U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostCurePvE => _LostCurePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostCureIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostCureIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostCureIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostCureIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostCureIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostCureIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20727U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostCureIiPvE => _LostCureIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostCureIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostCureIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostCureIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostCureIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostCureIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostCureIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20728U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostCureIiiPvE => _LostCureIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostCureIvPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostCureIvPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostCureIvPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostCureIvPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostCureIvPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostCureIvPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20729U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostCureIvPvE => _LostCureIvPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostArisePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostArisePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostArisePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostArisePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostArisePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostArisePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20730U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostArisePvE => _LostArisePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostIncensePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostIncensePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostIncensePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostIncensePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostIncensePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostIncensePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20731U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostIncensePvE => _LostIncensePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFairTradePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFairTradePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFairTradePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFairTradePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFairTradePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFairTradePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20732U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFairTradePvE => _LostFairTradePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MimicPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MimicPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMimicPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MimicPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMimicPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MimicPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20733U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MimicPvE => _MimicPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DynamisDicePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DynamisDicePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDynamisDicePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DynamisDicePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDynamisDicePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DynamisDicePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20734U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DynamisDicePvE => _DynamisDicePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistancePhoenixPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistancePhoenixPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistancePhoenixPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistancePhoenixPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistancePhoenixPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistancePhoenixPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20735U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistancePhoenixPvE => _ResistancePhoenixPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistanceReraiserPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistanceReraiserPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistanceReraiserPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistanceReraiserPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistanceReraiserPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistanceReraiserPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20736U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistanceReraiserPvE => _ResistanceReraiserPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistancePotionKitPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistancePotionKitPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistancePotionKitPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistancePotionKitPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistancePotionKitPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistancePotionKitPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20737U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistancePotionKitPvE => _ResistancePotionKitPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistanceEtherKitPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistanceEtherKitPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistanceEtherKitPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistanceEtherKitPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistanceEtherKitPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistanceEtherKitPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20738U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistanceEtherKitPvE => _ResistanceEtherKitPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistanceMedikitPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistanceMedikitPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistanceMedikitPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistanceMedikitPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistanceMedikitPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistanceMedikitPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20739U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistanceMedikitPvE => _ResistanceMedikitPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistancePotionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistancePotionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistancePotionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistancePotionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistancePotionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistancePotionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20740U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistancePotionPvE => _ResistancePotionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheAetherweaverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheAetherweaverPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheAetherweaverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheAetherweaverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheAetherweaverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheAetherweaverPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20741U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheAetherweaverPvE => _EssenceOfTheAetherweaverPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheMartialistPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheMartialistPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheMartialistPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheMartialistPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheMartialistPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheMartialistPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20742U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheMartialistPvE => _EssenceOfTheMartialistPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheSaviorPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheSaviorPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheSaviorPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheSaviorPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheSaviorPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheSaviorPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20743U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheSaviorPvE => _EssenceOfTheSaviorPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheVeteranPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheVeteranPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheVeteranPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheVeteranPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheVeteranPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheVeteranPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20744U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheVeteranPvE => _EssenceOfTheVeteranPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfThePlatebearerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfThePlatebearerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfThePlatebearerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfThePlatebearerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfThePlatebearerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfThePlatebearerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20745U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfThePlatebearerPvE => _EssenceOfThePlatebearerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheGuardianPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheGuardianPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheGuardianPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheGuardianPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheGuardianPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheGuardianPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20746U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheGuardianPvE => _EssenceOfTheGuardianPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheOrdainedPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheOrdainedPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheOrdainedPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheOrdainedPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheOrdainedPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheOrdainedPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20747U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheOrdainedPvE => _EssenceOfTheOrdainedPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheSkirmisherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheSkirmisherPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheSkirmisherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheSkirmisherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheSkirmisherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheSkirmisherPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20748U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheSkirmisherPvE => _EssenceOfTheSkirmisherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheWatcherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheWatcherPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheWatcherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheWatcherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheWatcherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheWatcherPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20749U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheWatcherPvE => _EssenceOfTheWatcherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheProfanePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheProfanePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheProfanePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheProfanePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheProfanePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheProfanePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20750U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheProfanePvE => _EssenceOfTheProfanePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheIrregularPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheIrregularPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheIrregularPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheIrregularPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheIrregularPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheIrregularPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20751U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheIrregularPvE => _EssenceOfTheIrregularPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheBreathtakerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheBreathtakerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheBreathtakerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheBreathtakerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheBreathtakerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheBreathtakerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20752U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheBreathtakerPvE => _EssenceOfTheBreathtakerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheBloodsuckerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheBloodsuckerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheBloodsuckerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheBloodsuckerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheBloodsuckerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheBloodsuckerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20753U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheBloodsuckerPvE => _EssenceOfTheBloodsuckerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheBeastPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheBeastPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheBeastPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheBeastPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheBeastPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheBeastPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20754U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheBeastPvE => _EssenceOfTheBeastPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EssenceOfTheTemplarPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EssenceOfTheTemplarPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEssenceOfTheTemplarPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EssenceOfTheTemplarPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEssenceOfTheTemplarPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EssenceOfTheTemplarPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20755U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EssenceOfTheTemplarPvE => _EssenceOfTheTemplarPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheAetherweaverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheAetherweaverPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheAetherweaverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheAetherweaverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheAetherweaverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheAetherweaverPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20756U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheAetherweaverPvE => _DeepEssenceOfTheAetherweaverPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheMartialistPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheMartialistPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheMartialistPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheMartialistPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheMartialistPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheMartialistPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20757U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheMartialistPvE => _DeepEssenceOfTheMartialistPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheSaviorPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheSaviorPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheSaviorPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheSaviorPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheSaviorPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheSaviorPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20758U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheSaviorPvE => _DeepEssenceOfTheSaviorPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheVeteranPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheVeteranPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheVeteranPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheVeteranPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheVeteranPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheVeteranPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20759U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheVeteranPvE => _DeepEssenceOfTheVeteranPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfThePlatebearerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfThePlatebearerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfThePlatebearerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfThePlatebearerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfThePlatebearerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfThePlatebearerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20760U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfThePlatebearerPvE => _DeepEssenceOfThePlatebearerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheGuardianPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheGuardianPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheGuardianPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheGuardianPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheGuardianPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheGuardianPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20761U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheGuardianPvE => _DeepEssenceOfTheGuardianPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheOrdainedPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheOrdainedPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheOrdainedPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheOrdainedPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheOrdainedPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheOrdainedPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20762U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheOrdainedPvE => _DeepEssenceOfTheOrdainedPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheSkirmisherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheSkirmisherPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheSkirmisherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheSkirmisherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheSkirmisherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheSkirmisherPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20763U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheSkirmisherPvE => _DeepEssenceOfTheSkirmisherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheWatcherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheWatcherPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheWatcherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheWatcherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheWatcherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheWatcherPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20764U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheWatcherPvE => _DeepEssenceOfTheWatcherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheProfanePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheProfanePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheProfanePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheProfanePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheProfanePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheProfanePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20765U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheProfanePvE => _DeepEssenceOfTheProfanePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheIrregularPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheIrregularPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheIrregularPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheIrregularPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheIrregularPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheIrregularPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20766U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheIrregularPvE => _DeepEssenceOfTheIrregularPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheBreathtakerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheBreathtakerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheBreathtakerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheBreathtakerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheBreathtakerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheBreathtakerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20767U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheBreathtakerPvE => _DeepEssenceOfTheBreathtakerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheBloodsuckerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheBloodsuckerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheBloodsuckerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheBloodsuckerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheBloodsuckerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheBloodsuckerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20768U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheBloodsuckerPvE => _DeepEssenceOfTheBloodsuckerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheBeastPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheBeastPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheBeastPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheBeastPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheBeastPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheBeastPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20769U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheBeastPvE => _DeepEssenceOfTheBeastPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeepEssenceOfTheTemplarPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheTemplarPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeepEssenceOfTheTemplarPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeepEssenceOfTheTemplarPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeepEssenceOfTheTemplarPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeepEssenceOfTheTemplarPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20770U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DeepEssenceOfTheTemplarPvE => _DeepEssenceOfTheTemplarPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AutoRestorationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AutoRestorationPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAutoRestorationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AutoRestorationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAutoRestorationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AutoRestorationPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(20940U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AutoRestorationPvE => _AutoRestorationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnkindlingFlameDancePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnkindlingFlameDancePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnkindlingFlameDancePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnkindlingFlameDancePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnkindlingFlameDancePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnkindlingFlameDancePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21324U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnkindlingFlameDancePvE => _EnkindlingFlameDancePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _InvigoratingFlameDancePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.InvigoratingFlameDancePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyInvigoratingFlameDancePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="InvigoratingFlameDancePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyInvigoratingFlameDancePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.InvigoratingFlameDancePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21325U)]
    public global::RotationSolver.Basic.Actions.IBaseAction InvigoratingFlameDancePvE => _InvigoratingFlameDancePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FlechePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FlechePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFlechePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FlechePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFlechePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FlechePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21494U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FlechePvE => _FlechePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ContreSixtePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ContreSixtePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyContreSixtePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ContreSixtePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyContreSixtePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ContreSixtePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21495U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ContreSixtePvE => _ContreSixtePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DisplacementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DisplacementPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDisplacementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DisplacementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDisplacementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DisplacementPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21496U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DisplacementPvE => _DisplacementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VercurePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VercurePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVercurePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VercurePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVercurePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VercurePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21497U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VercurePvE => _VercurePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MaleficIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MaleficIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMaleficIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MaleficIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMaleficIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MaleficIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21498U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MaleficIiiPvE => _MaleficIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DestinyDrawnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DestinyDrawnPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDestinyDrawnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DestinyDrawnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDestinyDrawnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DestinyDrawnPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21499U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DestinyDrawnPvE => _DestinyDrawnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LordOfCrownsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LordOfCrownsPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLordOfCrownsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LordOfCrownsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLordOfCrownsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LordOfCrownsPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21607U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LordOfCrownsPvE => _LordOfCrownsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BeneficPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BeneficPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBeneficPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BeneficPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBeneficPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BeneficPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21608U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BeneficPvE => _BeneficPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AspectedHeliosPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AspectedHeliosPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAspectedHeliosPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AspectedHeliosPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAspectedHeliosPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AspectedHeliosPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21609U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AspectedHeliosPvE => _AspectedHeliosPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TheScrollPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TheScrollPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTheScrollPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TheScrollPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTheScrollPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TheScrollPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21610U)]
    public global::RotationSolver.Basic.Actions.IBaseAction TheScrollPvE => _TheScrollPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FixedSignPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FixedSignPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFixedSignPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FixedSignPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFixedSignPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FixedSignPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21611U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FixedSignPvE => _FixedSignPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FireIvPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FireIvPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFireIvPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FireIvPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFireIvPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FireIvPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21612U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FireIvPvE => _FireIvPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FoulPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FoulPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFoulPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FoulPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFoulPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FoulPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21613U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FoulPvE => _FoulPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AllaganBlizzardIvPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AllaganBlizzardIvPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAllaganBlizzardIvPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AllaganBlizzardIvPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAllaganBlizzardIvPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AllaganBlizzardIvPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21852U)]
    public global::RotationSolver.Basic.Actions.IBaseAction AllaganBlizzardIvPvE => _AllaganBlizzardIvPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThunderIvPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ThunderIvPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyThunderIvPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThunderIvPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyThunderIvPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThunderIvPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21884U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ThunderIvPvE => _ThunderIvPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CureIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CureIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCureIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CureIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCureIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CureIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21886U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CureIiPvE => _CureIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MedicaIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MedicaIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMedicaIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MedicaIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMedicaIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MedicaIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21888U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MedicaIiPvE => _MedicaIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BreakPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BreakPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBreakPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BreakPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBreakPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BreakPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21921U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BreakPvE => _BreakPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerholyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerholyPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerholyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerholyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerholyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerholyPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(21923U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerholyPvE => _VerholyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostPerceptionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostPerceptionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostPerceptionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostPerceptionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostPerceptionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostPerceptionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22344U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostPerceptionPvE => _LostPerceptionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostSacrificePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostSacrificePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostSacrificePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostSacrificePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostSacrificePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostSacrificePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22345U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostSacrificePvE => _LostSacrificePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PureEssenceOfTheGamblerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheGamblerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPureEssenceOfTheGamblerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PureEssenceOfTheGamblerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPureEssenceOfTheGamblerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheGamblerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22346U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PureEssenceOfTheGamblerPvE => _PureEssenceOfTheGamblerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PureEssenceOfTheElderPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheElderPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPureEssenceOfTheElderPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PureEssenceOfTheElderPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPureEssenceOfTheElderPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheElderPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22347U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PureEssenceOfTheElderPvE => _PureEssenceOfTheElderPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PureEssenceOfTheDuelistPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheDuelistPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPureEssenceOfTheDuelistPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PureEssenceOfTheDuelistPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPureEssenceOfTheDuelistPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheDuelistPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22348U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PureEssenceOfTheDuelistPvE => _PureEssenceOfTheDuelistPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PureEssenceOfTheFiendhunterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheFiendhunterPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPureEssenceOfTheFiendhunterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PureEssenceOfTheFiendhunterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPureEssenceOfTheFiendhunterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheFiendhunterPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22349U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PureEssenceOfTheFiendhunterPvE => _PureEssenceOfTheFiendhunterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PureEssenceOfTheIndomitablePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheIndomitablePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPureEssenceOfTheIndomitablePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PureEssenceOfTheIndomitablePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPureEssenceOfTheIndomitablePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheIndomitablePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22350U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PureEssenceOfTheIndomitablePvE => _PureEssenceOfTheIndomitablePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PureEssenceOfTheDivinePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheDivinePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPureEssenceOfTheDivinePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PureEssenceOfTheDivinePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPureEssenceOfTheDivinePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PureEssenceOfTheDivinePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22351U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PureEssenceOfTheDivinePvE => _PureEssenceOfTheDivinePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFlareStarPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFlareStarPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFlareStarPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFlareStarPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFlareStarPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFlareStarPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22352U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFlareStarPvE => _LostFlareStarPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostRendArmorPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostRendArmorPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostRendArmorPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostRendArmorPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostRendArmorPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostRendArmorPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22353U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostRendArmorPvE => _LostRendArmorPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostSeraphStrikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostSeraphStrikePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostSeraphStrikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostSeraphStrikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostSeraphStrikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostSeraphStrikePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22354U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostSeraphStrikePvE => _LostSeraphStrikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostAethershieldPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostAethershieldPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostAethershieldPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostAethershieldPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostAethershieldPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostAethershieldPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22355U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostAethershieldPvE => _LostAethershieldPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostDervishPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostDervishPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostDervishPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostDervishPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostDervishPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostDervishPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(22356U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostDervishPvE => _LostDervishPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FireIvPvE_22502Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FireIvPvE_22502, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFireIvPvE_22502(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FireIvPvE_22502"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFireIvPvE_22502(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FireIvPvE_22502"/>
    [global::RotationSolver.Basic.Attributes.ID(22502U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FireIvPvE_22502 => _FireIvPvE_22502Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FireIvPvE_22817Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FireIvPvE_22817, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFireIvPvE_22817(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FireIvPvE_22817"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFireIvPvE_22817(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FireIvPvE_22817"/>
    [global::RotationSolver.Basic.Attributes.ID(22817U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FireIvPvE_22817 => _FireIvPvE_22817Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LodestonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LodestonePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLodestonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LodestonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLodestonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LodestonePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23907U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LodestonePvE => _LodestonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostStoneskinIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostStoneskinIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostStoneskinIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostStoneskinIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostStoneskinIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostStoneskinIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23908U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostStoneskinIiPvE => _LostStoneskinIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostBurstPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostBurstPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostBurstPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostBurstPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostBurstPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostBurstPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23909U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostBurstPvE => _LostBurstPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostRampagePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostRampagePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostRampagePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostRampagePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostRampagePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostRampagePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23910U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostRampagePvE => _LostRampagePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LightCurtainPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LightCurtainPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLightCurtainPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LightCurtainPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLightCurtainPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LightCurtainPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23911U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LightCurtainPvE => _LightCurtainPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostReraisePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostReraisePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostReraisePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostReraisePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostReraisePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostReraisePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23912U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostReraisePvE => _LostReraisePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostChainspellPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostChainspellPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostChainspellPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostChainspellPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostChainspellPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostChainspellPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23913U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostChainspellPvE => _LostChainspellPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostAssassinationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostAssassinationPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostAssassinationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostAssassinationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostAssassinationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostAssassinationPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23914U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostAssassinationPvE => _LostAssassinationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostProtectIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostProtectIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostProtectIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostProtectIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostProtectIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostProtectIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23915U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostProtectIiPvE => _LostProtectIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostShellIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostShellIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostShellIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostShellIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostShellIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostShellIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23916U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostShellIiPvE => _LostShellIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostBubblePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostBubblePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostBubblePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostBubblePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostBubblePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostBubblePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23917U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostBubblePvE => _LostBubblePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostImpetusPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostImpetusPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostImpetusPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostImpetusPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostImpetusPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostImpetusPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23918U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostImpetusPvE => _LostImpetusPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostExcellencePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostExcellencePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostExcellencePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostExcellencePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostExcellencePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostExcellencePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23919U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostExcellencePvE => _LostExcellencePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostFullCurePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostFullCurePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostFullCurePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostFullCurePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostFullCurePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostFullCurePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23920U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostFullCurePvE => _LostFullCurePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LostBloodRagePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LostBloodRagePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLostBloodRagePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LostBloodRagePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLostBloodRagePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LostBloodRagePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23921U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LostBloodRagePvE => _LostBloodRagePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResistanceElixirPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ResistanceElixirPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyResistanceElixirPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResistanceElixirPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyResistanceElixirPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResistanceElixirPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(23922U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ResistanceElixirPvE => _ResistanceElixirPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DestinysSleevePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DestinysSleevePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDestinysSleevePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DestinysSleevePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDestinysSleevePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DestinysSleevePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24066U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DestinysSleevePvE => _DestinysSleevePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MightyMaximizerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MightyMaximizerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMightyMaximizerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MightyMaximizerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMightyMaximizerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MightyMaximizerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24277U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MightyMaximizerPvE => _MightyMaximizerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ChirpyCheckerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ChirpyCheckerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyChirpyCheckerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ChirpyCheckerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyChirpyCheckerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ChirpyCheckerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24278U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ChirpyCheckerPvE => _ChirpyCheckerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PerkyPeelerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PerkyPeelerPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPerkyPeelerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PerkyPeelerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPerkyPeelerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PerkyPeelerPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24279U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PerkyPeelerPvE => _PerkyPeelerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LiminalFirePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LiminalFirePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLiminalFirePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LiminalFirePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLiminalFirePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LiminalFirePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24619U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LiminalFirePvE => _LiminalFirePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LiminalFirePvE_24620Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LiminalFirePvE_24620, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLiminalFirePvE_24620(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LiminalFirePvE_24620"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLiminalFirePvE_24620(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LiminalFirePvE_24620"/>
    [global::RotationSolver.Basic.Attributes.ID(24620U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LiminalFirePvE_24620 => _LiminalFirePvE_24620Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _F0SwitchPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.F0SwitchPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyF0SwitchPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="F0SwitchPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyF0SwitchPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.F0SwitchPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24621U)]
    public global::RotationSolver.Basic.Actions.IBaseAction F0SwitchPvE => _F0SwitchPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _F0SwitchPvE_24622Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.F0SwitchPvE_24622, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyF0SwitchPvE_24622(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="F0SwitchPvE_24622"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyF0SwitchPvE_24622(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.F0SwitchPvE_24622"/>
    [global::RotationSolver.Basic.Attributes.ID(24622U)]
    public global::RotationSolver.Basic.Actions.IBaseAction F0SwitchPvE_24622 => _F0SwitchPvE_24622Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ScorchPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ScorchPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyScorchPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ScorchPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyScorchPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ScorchPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24831U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ScorchPvE => _ScorchPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ScorchPvE_24898Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ScorchPvE_24898, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyScorchPvE_24898(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ScorchPvE_24898"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyScorchPvE_24898(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ScorchPvE_24898"/>
    [global::RotationSolver.Basic.Attributes.ID(24898U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ScorchPvE_24898 => _ScorchPvE_24898Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CorpsacorpsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CorpsacorpsPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCorpsacorpsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CorpsacorpsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCorpsacorpsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CorpsacorpsPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24917U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CorpsacorpsPvE => _CorpsacorpsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRipostePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnchantedRipostePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRipostePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnchantedRipostePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24918U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRipostePvE => _EnchantedRipostePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedZwerchhauPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnchantedZwerchhauPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedZwerchhauPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnchantedZwerchhauPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24919U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedZwerchhauPvE => _EnchantedZwerchhauPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRedoublementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnchantedRedoublementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRedoublementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnchantedRedoublementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(24920U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRedoublementPvE => _EnchantedRedoublementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DiagnosisPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DiagnosisPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDiagnosisPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DiagnosisPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDiagnosisPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DiagnosisPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26224U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DiagnosisPvE => _DiagnosisPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EmboldenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EmboldenPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEmboldenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EmboldenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEmboldenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EmboldenPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26225U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EmboldenPvE => _EmboldenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagitekCannonPvE_26231Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MagitekCannonPvE_26231, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMagitekCannonPvE_26231(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagitekCannonPvE_26231"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMagitekCannonPvE_26231(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagitekCannonPvE_26231"/>
    [global::RotationSolver.Basic.Attributes.ID(26231U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MagitekCannonPvE_26231 => _MagitekCannonPvE_26231Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DiffractiveMagitekCannonPvE_26232Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DiffractiveMagitekCannonPvE_26232, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDiffractiveMagitekCannonPvE_26232(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DiffractiveMagitekCannonPvE_26232"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDiffractiveMagitekCannonPvE_26232(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DiffractiveMagitekCannonPvE_26232"/>
    [global::RotationSolver.Basic.Attributes.ID(26232U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DiffractiveMagitekCannonPvE_26232 => _DiffractiveMagitekCannonPvE_26232Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HighpoweredMagitekCannonPvE_26233Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HighpoweredMagitekCannonPvE_26233, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHighpoweredMagitekCannonPvE_26233(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HighpoweredMagitekCannonPvE_26233"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHighpoweredMagitekCannonPvE_26233(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HighpoweredMagitekCannonPvE_26233"/>
    [global::RotationSolver.Basic.Attributes.ID(26233U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HighpoweredMagitekCannonPvE_26233 => _HighpoweredMagitekCannonPvE_26233Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FastBladePvE_26249Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FastBladePvE_26249, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFastBladePvE_26249(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FastBladePvE_26249"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFastBladePvE_26249(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FastBladePvE_26249"/>
    [global::RotationSolver.Basic.Attributes.ID(26249U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FastBladePvE_26249 => _FastBladePvE_26249Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RiotBladePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RiotBladePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRiotBladePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RiotBladePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRiotBladePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RiotBladePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26250U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RiotBladePvE => _RiotBladePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RageOfHalonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RageOfHalonePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRageOfHalonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RageOfHalonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRageOfHalonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RageOfHalonePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26251U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RageOfHalonePvE => _RageOfHalonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FightOrFlightPvE_26252Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FightOrFlightPvE_26252, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFightOrFlightPvE_26252(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FightOrFlightPvE_26252"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFightOrFlightPvE_26252(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FightOrFlightPvE_26252"/>
    [global::RotationSolver.Basic.Attributes.ID(26252U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FightOrFlightPvE_26252 => _FightOrFlightPvE_26252Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RampartPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RampartPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRampartPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RampartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRampartPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RampartPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26253U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RampartPvE => _RampartPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FiendishLanternPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FiendishLanternPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFiendishLanternPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FiendishLanternPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFiendishLanternPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FiendishLanternPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26890U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FiendishLanternPvE => _FiendishLanternPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HealingHolyWaterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HealingHolyWaterPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHealingHolyWaterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HealingHolyWaterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHealingHolyWaterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HealingHolyWaterPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(26891U)]
    public global::RotationSolver.Basic.Actions.IBaseAction HealingHolyWaterPvE => _HealingHolyWaterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LeveilleurDiagnosisPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LeveilleurDiagnosisPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLeveilleurDiagnosisPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LeveilleurDiagnosisPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLeveilleurDiagnosisPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LeveilleurDiagnosisPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27042U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LeveilleurDiagnosisPvE => _LeveilleurDiagnosisPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PrognosisPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PrognosisPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPrognosisPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PrognosisPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPrognosisPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PrognosisPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27043U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PrognosisPvE => _PrognosisPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LeveilleurDruocholePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LeveilleurDruocholePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLeveilleurDruocholePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LeveilleurDruocholePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLeveilleurDruocholePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LeveilleurDruocholePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27044U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LeveilleurDruocholePvE => _LeveilleurDruocholePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DosisIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DosisIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDosisIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DosisIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDosisIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DosisIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27045U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DosisIiiPvE => _DosisIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LeveilleurToxikonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LeveilleurToxikonPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLeveilleurToxikonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LeveilleurToxikonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLeveilleurToxikonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LeveilleurToxikonPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27047U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LeveilleurToxikonPvE => _LeveilleurToxikonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerfirePvE_27048Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerfirePvE_27048, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerfirePvE_27048(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerfirePvE_27048"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerfirePvE_27048(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerfirePvE_27048"/>
    [global::RotationSolver.Basic.Attributes.ID(27048U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerfirePvE_27048 => _VerfirePvE_27048Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VeraeroPvE_27049Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VeraeroPvE_27049, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVeraeroPvE_27049(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VeraeroPvE_27049"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVeraeroPvE_27049(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VeraeroPvE_27049"/>
    [global::RotationSolver.Basic.Attributes.ID(27049U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VeraeroPvE_27049 => _VeraeroPvE_27049Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerstonePvE_27050Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerstonePvE_27050, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerstonePvE_27050(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerstonePvE_27050"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerstonePvE_27050(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerstonePvE_27050"/>
    [global::RotationSolver.Basic.Attributes.ID(27050U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerstonePvE_27050 => _VerstonePvE_27050Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerthunderPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerthunderPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerthunderPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerthunderPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerthunderPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerthunderPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27051U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerthunderPvE => _VerthunderPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerflarePvE_27052Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerflarePvE_27052, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerflarePvE_27052(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerflarePvE_27052"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerflarePvE_27052(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerflarePvE_27052"/>
    [global::RotationSolver.Basic.Attributes.ID(27052U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerflarePvE_27052 => _VerflarePvE_27052Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CrimsonSaviorPvE_27053Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CrimsonSaviorPvE_27053, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCrimsonSaviorPvE_27053(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CrimsonSaviorPvE_27053"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCrimsonSaviorPvE_27053(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CrimsonSaviorPvE_27053"/>
    [global::RotationSolver.Basic.Attributes.ID(27053U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CrimsonSaviorPvE_27053 => _CrimsonSaviorPvE_27053Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CorpsacorpsPvE_27054Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CorpsacorpsPvE_27054, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCorpsacorpsPvE_27054(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CorpsacorpsPvE_27054"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCorpsacorpsPvE_27054(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CorpsacorpsPvE_27054"/>
    [global::RotationSolver.Basic.Attributes.ID(27054U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CorpsacorpsPvE_27054 => _CorpsacorpsPvE_27054Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRipostePvE_27055Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvE_27055, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnchantedRipostePvE_27055(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRipostePvE_27055"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnchantedRipostePvE_27055(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvE_27055"/>
    [global::RotationSolver.Basic.Attributes.ID(27055U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRipostePvE_27055 => _EnchantedRipostePvE_27055Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedZwerchhauPvE_27056Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvE_27056, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnchantedZwerchhauPvE_27056(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedZwerchhauPvE_27056"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnchantedZwerchhauPvE_27056(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvE_27056"/>
    [global::RotationSolver.Basic.Attributes.ID(27056U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedZwerchhauPvE_27056 => _EnchantedZwerchhauPvE_27056Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRedoublementPvE_27057Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvE_27057, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEnchantedRedoublementPvE_27057(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRedoublementPvE_27057"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEnchantedRedoublementPvE_27057(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvE_27057"/>
    [global::RotationSolver.Basic.Attributes.ID(27057U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRedoublementPvE_27057 => _EnchantedRedoublementPvE_27057Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EngagementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EngagementPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEngagementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EngagementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEngagementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EngagementPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27058U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EngagementPvE => _EngagementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerholyPvE_27059Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VerholyPvE_27059, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVerholyPvE_27059(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerholyPvE_27059"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVerholyPvE_27059(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerholyPvE_27059"/>
    [global::RotationSolver.Basic.Attributes.ID(27059U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VerholyPvE_27059 => _VerholyPvE_27059Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ContreSixtePvE_27060Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ContreSixtePvE_27060, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyContreSixtePvE_27060(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ContreSixtePvE_27060"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyContreSixtePvE_27060(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ContreSixtePvE_27060"/>
    [global::RotationSolver.Basic.Attributes.ID(27060U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ContreSixtePvE_27060 => _ContreSixtePvE_27060Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VercurePvE_27061Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VercurePvE_27061, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVercurePvE_27061(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VercurePvE_27061"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVercurePvE_27061(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VercurePvE_27061"/>
    [global::RotationSolver.Basic.Attributes.ID(27061U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VercurePvE_27061 => _VercurePvE_27061Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VermilionPledgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VermilionPledgePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVermilionPledgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VermilionPledgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVermilionPledgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VermilionPledgePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27062U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VermilionPledgePvE => _VermilionPledgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KeenEdgePvE_27427Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KeenEdgePvE_27427, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKeenEdgePvE_27427(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KeenEdgePvE_27427"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKeenEdgePvE_27427(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KeenEdgePvE_27427"/>
    [global::RotationSolver.Basic.Attributes.ID(27427U)]
    public global::RotationSolver.Basic.Actions.IBaseAction KeenEdgePvE_27427 => _KeenEdgePvE_27427Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BrutalShellPvE_27428Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BrutalShellPvE_27428, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBrutalShellPvE_27428(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BrutalShellPvE_27428"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBrutalShellPvE_27428(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BrutalShellPvE_27428"/>
    [global::RotationSolver.Basic.Attributes.ID(27428U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BrutalShellPvE_27428 => _BrutalShellPvE_27428Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SolidBarrelPvE_27429Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvE_27429, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySolidBarrelPvE_27429(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SolidBarrelPvE_27429"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySolidBarrelPvE_27429(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvE_27429"/>
    [global::RotationSolver.Basic.Attributes.ID(27429U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SolidBarrelPvE_27429 => _SolidBarrelPvE_27429Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NebulaPvE_27430Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NebulaPvE_27430, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyNebulaPvE_27430(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NebulaPvE_27430"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyNebulaPvE_27430(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NebulaPvE_27430"/>
    [global::RotationSolver.Basic.Attributes.ID(27430U)]
    public global::RotationSolver.Basic.Actions.IBaseAction NebulaPvE_27430 => _NebulaPvE_27430Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftDeceptionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SwiftDeceptionPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySwiftDeceptionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftDeceptionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySwiftDeceptionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftDeceptionPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27432U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftDeceptionPvE => _SwiftDeceptionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SilentTakedownPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SilentTakedownPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySilentTakedownPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SilentTakedownPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySilentTakedownPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SilentTakedownPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27433U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SilentTakedownPvE => _SilentTakedownPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BewildermentBombPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BewildermentBombPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBewildermentBombPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BewildermentBombPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBewildermentBombPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BewildermentBombPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(27434U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BewildermentBombPvE => _BewildermentBombPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LeveilleurDosisIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LeveilleurDosisIiiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLeveilleurDosisIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LeveilleurDosisIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLeveilleurDosisIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LeveilleurDosisIiiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(28439U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LeveilleurDosisIiiPvE => _LeveilleurDosisIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SeizePvE_29155Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SeizePvE_29155, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySeizePvE_29155(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SeizePvE_29155"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySeizePvE_29155(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SeizePvE_29155"/>
    [global::RotationSolver.Basic.Attributes.ID(29155U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SeizePvE_29155 => _SeizePvE_29155Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantCurePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantCurePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantCurePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantCurePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantCurePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantCurePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(29729U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantCurePvE => _VariantCurePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantUltimatumPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantUltimatumPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantUltimatumPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantUltimatumPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantUltimatumPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantUltimatumPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(29730U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantUltimatumPvE => _VariantUltimatumPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantRaisePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantRaisePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantRaisePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantRaisePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantRaisePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantRaisePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(29731U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantRaisePvE => _VariantRaisePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantSpiritDartPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantSpiritDartPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantSpiritDartPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantSpiritDartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantSpiritDartPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantSpiritDartPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(29732U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantSpiritDartPvE => _VariantSpiritDartPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantRampartPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantRampartPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantRampartPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantRampartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantRampartPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantRampartPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(29733U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantRampartPvE => _VariantRampartPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantRaiseIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantRaiseIiPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantRaiseIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantRaiseIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantRaiseIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantRaiseIiPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(29734U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantRaiseIiPvE => _VariantRaiseIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GentlemanlySmashPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GentlemanlySmashPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGentlemanlySmashPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GentlemanlySmashPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGentlemanlySmashPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GentlemanlySmashPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31393U)]
    public global::RotationSolver.Basic.Actions.IBaseAction GentlemanlySmashPvE => _GentlemanlySmashPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GentlemanlyThrustPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GentlemanlyThrustPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGentlemanlyThrustPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GentlemanlyThrustPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGentlemanlyThrustPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GentlemanlyThrustPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31394U)]
    public global::RotationSolver.Basic.Actions.IBaseAction GentlemanlyThrustPvE => _GentlemanlyThrustPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RageOfTheGentlemanPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RageOfTheGentlemanPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRageOfTheGentlemanPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RageOfTheGentlemanPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRageOfTheGentlemanPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RageOfTheGentlemanPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31395U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RageOfTheGentlemanPvE => _RageOfTheGentlemanPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ManderdoubleLariatPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ManderdoubleLariatPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyManderdoubleLariatPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ManderdoubleLariatPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyManderdoubleLariatPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ManderdoubleLariatPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31396U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ManderdoubleLariatPvE => _ManderdoubleLariatPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MandervilleDropkickPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MandervilleDropkickPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMandervilleDropkickPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MandervilleDropkickPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMandervilleDropkickPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MandervilleDropkickPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31397U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MandervilleDropkickPvE => _MandervilleDropkickPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MandervilleSprintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MandervilleSprintPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMandervilleSprintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MandervilleSprintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMandervilleSprintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MandervilleSprintPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31398U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MandervilleSprintPvE => _MandervilleSprintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LimitBreakPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LimitBreakPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLimitBreakPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LimitBreakPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLimitBreakPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LimitBreakPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31399U)]
    public global::RotationSolver.Basic.Actions.IBaseAction LimitBreakPvE => _LimitBreakPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FrightenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FrightenPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFrightenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FrightenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFrightenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FrightenPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31472U)]
    public global::RotationSolver.Basic.Actions.IBaseAction FrightenPvE => _FrightenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EngravementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EngravementPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEngravementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EngravementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEngravementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EngravementPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31785U)]
    public global::RotationSolver.Basic.Actions.IBaseAction EngravementPvE => _EngravementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SlicePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SlicePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySlicePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SlicePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySlicePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SlicePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31786U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SlicePvE => _SlicePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WaxingSlicePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WaxingSlicePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWaxingSlicePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WaxingSlicePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWaxingSlicePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WaxingSlicePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31787U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WaxingSlicePvE => _WaxingSlicePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _InfernalSlicePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.InfernalSlicePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyInfernalSlicePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="InfernalSlicePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyInfernalSlicePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.InfernalSlicePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31788U)]
    public global::RotationSolver.Basic.Actions.IBaseAction InfernalSlicePvE => _InfernalSlicePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpinningScythePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpinningScythePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpinningScythePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpinningScythePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpinningScythePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpinningScythePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31789U)]
    public global::RotationSolver.Basic.Actions.IBaseAction SpinningScythePvE => _SpinningScythePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NightmareScythePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NightmareScythePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyNightmareScythePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NightmareScythePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyNightmareScythePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NightmareScythePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31790U)]
    public global::RotationSolver.Basic.Actions.IBaseAction NightmareScythePvE => _NightmareScythePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MarkOfTheHarvestPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MarkOfTheHarvestPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMarkOfTheHarvestPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MarkOfTheHarvestPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMarkOfTheHarvestPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MarkOfTheHarvestPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31792U)]
    public global::RotationSolver.Basic.Actions.IBaseAction MarkOfTheHarvestPvE => _MarkOfTheHarvestPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ArcaneCrestPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ArcaneCrestPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyArcaneCrestPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ArcaneCrestPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyArcaneCrestPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ArcaneCrestPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31793U)]
    public global::RotationSolver.Basic.Actions.IBaseAction ArcaneCrestPvE => _ArcaneCrestPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CommunioPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CommunioPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCommunioPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CommunioPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCommunioPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CommunioPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(31794U)]
    public global::RotationSolver.Basic.Actions.IBaseAction CommunioPvE => _CommunioPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RotosmashPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RotosmashPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRotosmashPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RotosmashPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRotosmashPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RotosmashPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(32781U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RotosmashPvE => _RotosmashPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WreckingBallPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WreckingBallPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyWreckingBallPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WreckingBallPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyWreckingBallPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WreckingBallPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(32782U)]
    public global::RotationSolver.Basic.Actions.IBaseAction WreckingBallPvE => _WreckingBallPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BloodbathPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BloodbathPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBloodbathPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BloodbathPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBloodbathPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BloodbathPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(33013U)]
    public global::RotationSolver.Basic.Actions.IBaseAction BloodbathPvE => _BloodbathPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantCurePvE_33862Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantCurePvE_33862, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantCurePvE_33862(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantCurePvE_33862"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantCurePvE_33862(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantCurePvE_33862"/>
    [global::RotationSolver.Basic.Attributes.ID(33862U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantCurePvE_33862 => _VariantCurePvE_33862Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantSpiritDartPvE_33863Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantSpiritDartPvE_33863, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantSpiritDartPvE_33863(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantSpiritDartPvE_33863"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantSpiritDartPvE_33863(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantSpiritDartPvE_33863"/>
    [global::RotationSolver.Basic.Attributes.ID(33863U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantSpiritDartPvE_33863 => _VariantSpiritDartPvE_33863Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VariantRampartPvE_33864Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.VariantRampartPvE_33864, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyVariantRampartPvE_33864(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VariantRampartPvE_33864"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyVariantRampartPvE_33864(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VariantRampartPvE_33864"/>
    [global::RotationSolver.Basic.Attributes.ID(33864U)]
    public global::RotationSolver.Basic.Actions.IBaseAction VariantRampartPvE_33864 => _VariantRampartPvE_33864Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DodgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DodgePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDodgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DodgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDodgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DodgePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(33987U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DodgePvE => _DodgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DodgePvE_33988Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DodgePvE_33988, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDodgePvE_33988(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DodgePvE_33988"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDodgePvE_33988(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DodgePvE_33988"/>
    [global::RotationSolver.Basic.Attributes.ID(33988U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DodgePvE_33988 => _DodgePvE_33988Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DodgePvE_33989Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DodgePvE_33989, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDodgePvE_33989(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DodgePvE_33989"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDodgePvE_33989(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DodgePvE_33989"/>
    [global::RotationSolver.Basic.Attributes.ID(33989U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DodgePvE_33989 => _DodgePvE_33989Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DodgePvE_33990Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DodgePvE_33990, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDodgePvE_33990(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DodgePvE_33990"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDodgePvE_33990(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DodgePvE_33990"/>
    [global::RotationSolver.Basic.Attributes.ID(33990U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DodgePvE_33990 => _DodgePvE_33990Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DodgePvE_33997Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DodgePvE_33997, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDodgePvE_33997(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DodgePvE_33997"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDodgePvE_33997(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DodgePvE_33997"/>
    [global::RotationSolver.Basic.Attributes.ID(33997U)]
    public global::RotationSolver.Basic.Actions.IBaseAction DodgePvE_33997 => _DodgePvE_33997Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PrecisionStrikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PrecisionStrikePvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPrecisionStrikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PrecisionStrikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPrecisionStrikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PrecisionStrikePvE"/>
    [global::RotationSolver.Basic.Attributes.ID(34515U)]
    public global::RotationSolver.Basic.Actions.IBaseAction PrecisionStrikePvE => _PrecisionStrikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RisingFlamesPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RisingFlamesPvE, true);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRisingFlamesPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RisingFlamesPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRisingFlamesPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RisingFlamesPvE"/>
    [global::RotationSolver.Basic.Attributes.ID(34790U)]
    public global::RotationSolver.Basic.Actions.IBaseAction RisingFlamesPvE => _RisingFlamesPvECreator.Value;
}