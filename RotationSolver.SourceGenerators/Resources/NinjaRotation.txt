// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations.Basic;
[global::RotationSolver.Basic.Attributes.Jobs(global::ECommons.ExcelServices.Job.NIN, global::ECommons.ExcelServices.Job.ROG)]
/// <summary>
/// <see href="https://na.finalfantasyxiv.com/jobguide/ninja"><strong>Ninja</strong></see>
/// <br>Number of Actions: 69</br>
/// <br>Number of Traits: 14</br>
/// </summary>
public abstract partial class NinjaRotation : global::RotationSolver.Basic.Rotations.CustomRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpinningEdgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpinningEdgePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpinningEdgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpinningEdgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpinningEdgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpinningEdgePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SpinningEdgePvE => _SpinningEdgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShadeShiftPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShadeShiftPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShadeShiftPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShadeShiftPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShadeShiftPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShadeShiftPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShadeShiftPvE => _ShadeShiftPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GustSlashPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GustSlashPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGustSlashPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GustSlashPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGustSlashPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GustSlashPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GustSlashPvE => _GustSlashPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HidePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HidePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHidePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HidePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHidePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HidePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HidePvE => _HidePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AssassinatePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AssassinatePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAssassinatePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AssassinatePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAssassinatePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AssassinatePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction AssassinatePvE => _AssassinatePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThrowingDaggerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ThrowingDaggerPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyThrowingDaggerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThrowingDaggerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyThrowingDaggerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThrowingDaggerPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThrowingDaggerPvE => _ThrowingDaggerPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MugPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MugPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMugPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MugPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMugPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MugPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MugPvE => _MugPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeathBlossomPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DeathBlossomPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDeathBlossomPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeathBlossomPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDeathBlossomPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeathBlossomPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DeathBlossomPvE => _DeathBlossomPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AeolianEdgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AeolianEdgePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAeolianEdgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AeolianEdgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAeolianEdgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AeolianEdgePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction AeolianEdgePvE => _AeolianEdgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TrickAttackPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TrickAttackPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTrickAttackPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TrickAttackPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTrickAttackPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TrickAttackPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TrickAttackPvE => _TrickAttackPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TenPvE => _TenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NinjutsuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NinjutsuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyNinjutsuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NinjutsuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyNinjutsuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NinjutsuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction NinjutsuPvE => _NinjutsuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ChiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ChiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyChiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ChiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyChiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ChiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ChiPvE => _ChiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShukuchiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShukuchiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShukuchiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShukuchiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShukuchiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShukuchiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShukuchiPvE => _ShukuchiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JinPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JinPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyJinPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JinPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyJinPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JinPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction JinPvE => _JinPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KassatsuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KassatsuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKassatsuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KassatsuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKassatsuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KassatsuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KassatsuPvE => _KassatsuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FumaShurikenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFumaShurikenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FumaShurikenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFumaShurikenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FumaShurikenPvE => _FumaShurikenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KatonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KatonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKatonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KatonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKatonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KatonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KatonPvE => _KatonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RaitonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RaitonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRaitonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RaitonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRaitonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RaitonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction RaitonPvE => _RaitonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HyotonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HyotonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHyotonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HyotonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHyotonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HyotonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HyotonPvE => _HyotonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HutonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HutonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHutonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HutonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHutonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HutonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HutonPvE => _HutonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DotonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DotonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDotonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DotonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDotonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DotonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DotonPvE => _DotonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SuitonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SuitonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySuitonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SuitonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySuitonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SuitonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SuitonPvE => _SuitonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RabbitMediumPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RabbitMediumPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRabbitMediumPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RabbitMediumPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRabbitMediumPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RabbitMediumPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction RabbitMediumPvE => _RabbitMediumPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ArmorCrushPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ArmorCrushPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyArmorCrushPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ArmorCrushPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyArmorCrushPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ArmorCrushPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ArmorCrushPvE => _ArmorCrushPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DreamWithinADreamPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DreamWithinADreamPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDreamWithinADreamPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DreamWithinADreamPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDreamWithinADreamPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DreamWithinADreamPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DreamWithinADreamPvE => _DreamWithinADreamPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HellfrogMediumPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HellfrogMediumPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHellfrogMediumPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HellfrogMediumPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHellfrogMediumPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HellfrogMediumPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HellfrogMediumPvE => _HellfrogMediumPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BhavacakraPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BhavacakraPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBhavacakraPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BhavacakraPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBhavacakraPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BhavacakraPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction BhavacakraPvE => _BhavacakraPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TenChiJinPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TenChiJinPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTenChiJinPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TenChiJinPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTenChiJinPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TenChiJinPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TenChiJinPvE => _TenChiJinPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HakkeMujinsatsuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HakkeMujinsatsuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHakkeMujinsatsuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HakkeMujinsatsuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHakkeMujinsatsuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HakkeMujinsatsuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HakkeMujinsatsuPvE => _HakkeMujinsatsuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MeisuiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MeisuiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMeisuiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MeisuiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMeisuiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MeisuiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MeisuiPvE => _MeisuiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GokaMekkyakuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GokaMekkyakuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGokaMekkyakuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GokaMekkyakuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGokaMekkyakuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GokaMekkyakuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GokaMekkyakuPvE => _GokaMekkyakuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HyoshoRanryuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HyoshoRanryuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHyoshoRanryuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HyoshoRanryuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHyoshoRanryuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HyoshoRanryuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HyoshoRanryuPvE => _HyoshoRanryuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BunshinPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BunshinPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBunshinPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BunshinPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBunshinPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BunshinPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction BunshinPvE => _BunshinPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TenPvE_18805Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TenPvE_18805, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTenPvE_18805(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TenPvE_18805"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTenPvE_18805(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TenPvE_18805"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TenPvE_18805 => _TenPvE_18805Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ChiPvE_18806Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ChiPvE_18806, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyChiPvE_18806(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ChiPvE_18806"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyChiPvE_18806(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ChiPvE_18806"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ChiPvE_18806 => _ChiPvE_18806Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JinPvE_18807Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JinPvE_18807, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyJinPvE_18807(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JinPvE_18807"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyJinPvE_18807(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JinPvE_18807"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction JinPvE_18807 => _JinPvE_18807Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FumaShurikenPvE_18873Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE_18873, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFumaShurikenPvE_18873(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FumaShurikenPvE_18873"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFumaShurikenPvE_18873(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE_18873"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FumaShurikenPvE_18873 => _FumaShurikenPvE_18873Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FumaShurikenPvE_18874Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE_18874, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFumaShurikenPvE_18874(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FumaShurikenPvE_18874"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFumaShurikenPvE_18874(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE_18874"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FumaShurikenPvE_18874 => _FumaShurikenPvE_18874Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FumaShurikenPvE_18875Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE_18875, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFumaShurikenPvE_18875(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FumaShurikenPvE_18875"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFumaShurikenPvE_18875(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvE_18875"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FumaShurikenPvE_18875 => _FumaShurikenPvE_18875Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KatonPvE_18876Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KatonPvE_18876, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyKatonPvE_18876(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KatonPvE_18876"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyKatonPvE_18876(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KatonPvE_18876"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction KatonPvE_18876 => _KatonPvE_18876Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RaitonPvE_18877Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RaitonPvE_18877, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRaitonPvE_18877(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RaitonPvE_18877"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRaitonPvE_18877(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RaitonPvE_18877"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction RaitonPvE_18877 => _RaitonPvE_18877Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HyotonPvE_18878Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HyotonPvE_18878, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHyotonPvE_18878(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HyotonPvE_18878"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHyotonPvE_18878(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HyotonPvE_18878"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HyotonPvE_18878 => _HyotonPvE_18878Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HutonPvE_18879Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HutonPvE_18879, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHutonPvE_18879(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HutonPvE_18879"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHutonPvE_18879(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HutonPvE_18879"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HutonPvE_18879 => _HutonPvE_18879Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DotonPvE_18880Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DotonPvE_18880, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDotonPvE_18880(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DotonPvE_18880"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDotonPvE_18880(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DotonPvE_18880"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DotonPvE_18880 => _DotonPvE_18880Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SuitonPvE_18881Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SuitonPvE_18881, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySuitonPvE_18881(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SuitonPvE_18881"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySuitonPvE_18881(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SuitonPvE_18881"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SuitonPvE_18881 => _SuitonPvE_18881Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PhantomKamaitachiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PhantomKamaitachiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPhantomKamaitachiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PhantomKamaitachiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPhantomKamaitachiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PhantomKamaitachiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction PhantomKamaitachiPvE => _PhantomKamaitachiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HollowNozuchiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HollowNozuchiPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHollowNozuchiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HollowNozuchiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHollowNozuchiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HollowNozuchiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HollowNozuchiPvE => _HollowNozuchiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ForkedRaijuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ForkedRaijuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyForkedRaijuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ForkedRaijuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyForkedRaijuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ForkedRaijuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ForkedRaijuPvE => _ForkedRaijuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FleetingRaijuPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FleetingRaijuPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFleetingRaijuPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FleetingRaijuPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFleetingRaijuPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FleetingRaijuPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FleetingRaijuPvE => _FleetingRaijuPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuraijinPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HuraijinPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHuraijinPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuraijinPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHuraijinPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuraijinPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuraijinPvE => _HuraijinPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpinningEdgePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpinningEdgePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpinningEdgePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpinningEdgePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpinningEdgePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpinningEdgePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SpinningEdgePvP => _SpinningEdgePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GustSlashPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GustSlashPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGustSlashPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GustSlashPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGustSlashPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GustSlashPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GustSlashPvP => _GustSlashPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AeolianEdgePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AeolianEdgePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAeolianEdgePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AeolianEdgePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAeolianEdgePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AeolianEdgePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction AeolianEdgePvP => _AeolianEdgePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AssassinatePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AssassinatePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAssassinatePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AssassinatePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAssassinatePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AssassinatePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction AssassinatePvP => _AssassinatePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GokaMekkyakuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GokaMekkyakuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGokaMekkyakuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GokaMekkyakuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGokaMekkyakuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GokaMekkyakuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GokaMekkyakuPvP => _GokaMekkyakuPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FumaShurikenPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFumaShurikenPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FumaShurikenPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFumaShurikenPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FumaShurikenPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FumaShurikenPvP => _FumaShurikenPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HyoshoRanryuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HyoshoRanryuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHyoshoRanryuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HyoshoRanryuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHyoshoRanryuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HyoshoRanryuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HyoshoRanryuPvP => _HyoshoRanryuPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThreeMudraPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ThreeMudraPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyThreeMudraPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThreeMudraPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyThreeMudraPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThreeMudraPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThreeMudraPvP => _ThreeMudraPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MeisuiPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MeisuiPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMeisuiPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MeisuiPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMeisuiPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MeisuiPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MeisuiPvP => _MeisuiPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MugPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MugPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMugPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MugPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMugPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MugPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MugPvP => _MugPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ForkedRaijuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ForkedRaijuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyForkedRaijuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ForkedRaijuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyForkedRaijuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ForkedRaijuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ForkedRaijuPvP => _ForkedRaijuPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BunshinPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BunshinPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBunshinPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BunshinPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBunshinPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BunshinPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction BunshinPvP => _BunshinPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HutonPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HutonPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHutonPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HutonPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHutonPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HutonPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HutonPvP => _HutonPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShukuchiPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShukuchiPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShukuchiPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShukuchiPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShukuchiPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShukuchiPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShukuchiPvP => _ShukuchiPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DotonPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DotonPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDotonPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DotonPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDotonPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DotonPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DotonPvP => _DotonPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SeitonTenchuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SeitonTenchuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySeitonTenchuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SeitonTenchuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySeitonTenchuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SeitonTenchuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SeitonTenchuPvP => _SeitonTenchuPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SeitonTenchuPvP_29516Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SeitonTenchuPvP_29516, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySeitonTenchuPvP_29516(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SeitonTenchuPvP_29516"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySeitonTenchuPvP_29516(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SeitonTenchuPvP_29516"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SeitonTenchuPvP_29516 => _SeitonTenchuPvP_29516Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FleetingRaijuPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FleetingRaijuPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFleetingRaijuPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FleetingRaijuPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFleetingRaijuPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FleetingRaijuPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FleetingRaijuPvP => _FleetingRaijuPvPCreator.Value;
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50090"><strong>All Fours</strong></see> (ROG NIN) [90]
/// <para>Reduces damage taken when falling.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait AllFoursTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(90U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50093"><strong>Fleet of Foot</strong></see> (ROG NIN) [93]
/// <para>Increases movement speed.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait FleetOfFootTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(93U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50165"><strong>Shukiho</strong></see> (NIN) [165]
/// <para>Increases Ninki Gauge by 5 upon successfully landing certain weaponskills or completing certain combos.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait ShukihoTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(165U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50166"><strong>Enhanced Shukuchi</strong></see> (NIN) [166]
/// <para>Resets the recast timer for Shukuchi upon executing Katon, Raiton, or Hyoton on most targets.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedShukuchiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(166U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50167"><strong>Enhanced Mug</strong></see> (NIN) [167]
/// <para>Increases Ninki Gauge by 40 upon successfully landing Mug.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedMugTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(167U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50250"><strong>Enhanced Kassatsu</strong></see> (NIN) [250]
/// <para>Upgrades Katon and Hyoton to Goka Mekkyaku and Hyosho Ranryu while under the effect of Kassatsu.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedKassatsuTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(250U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50279"><strong>Enhanced Shukuchi II</strong></see> (NIN) [279]
/// <para>Allows the accumulation of charges for consecutive uses of  Shukuchi.</para>
/// <para>Maximum Charges: 2</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedShukuchiIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(279U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50280"><strong>Shukiho II</strong></see> (NIN) [280]
/// <para>Increases Ninki Gauge by 10 upon successfully completing a combo with Aeolian Edge or Armor Crush.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait ShukihoIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(280U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50439"><strong>Shukiho III</strong></see> (NIN) [439]
/// <para>Increases Ninki Gauge by 15 upon successfully completing a combo with Aeolian Edge or Armor Crush.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait ShukihoIiiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(439U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50440"><strong>Enhanced Meisui</strong></see> (NIN) [440]
/// <para>Increases the potency of Bhavacakra to 500 while under the effect of Meisui.</para>
/// <para>Duration: 30s</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedMeisuiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(440U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50441"><strong>Enhanced Raiton</strong></see> (NIN) [441]
/// <para>Grants a stack of Raiju Ready upon executing Raiton.</para>
/// <para>Maximum Stacks: 3</para>
/// <para>Duration: 30s</para>
/// <para>Effect of Raiju Ready ends upon execution of any melee weaponskill.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedRaitonTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(441U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50515"><strong>Adept Assassination</strong></see> (NIN) [515]
/// <para>Upgrades Assassinate to Dream Within a Dream.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait AdeptAssassinationTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(515U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50516"><strong>Melee Mastery</strong></see> (NIN) [516]
/// <para>Increases the potency of Gust Slash to 120, Aeolian Edge to 140, and Armor Crush to 140.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait MeleeMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(516U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50522"><strong>Melee Mastery II</strong></see> (NIN) [522]
/// <para>Increases the potency of Spinning Edge to 220 and Gust Slash to 160.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait MeleeMasteryIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(522U);

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private global::RotationSolver.Basic.Traits.IBaseTrait[]? _AllTraits = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Traits.IBaseTrait[] AllTraits => _AllTraits ??= [AllFoursTrait, FleetOfFootTrait, ShukihoTrait, EnhancedShukuchiTrait, EnhancedMugTrait, EnhancedKassatsuTrait, EnhancedShukuchiIiTrait, ShukihoIiTrait, ShukihoIiiTrait, EnhancedMeisuiTrait, EnhancedRaitonTrait, AdeptAssassinationTrait, MeleeMasteryTrait, MeleeMasteryIiTrait, ..base.AllTraits];

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    static global::Dalamud.Game.ClientState.JobGauge.Types.NINGauge JobGauge => global::ECommons.DalamudServices.Svc.Gauges.Get<global::Dalamud.Game.ClientState.JobGauge.Types.NINGauge>();

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BraverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BraverPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBraverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BraverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBraverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BraverPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction BraverPvE => _BraverPvECreator.Value;

    /// <inheritdoc cref="BraverPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak1 => BraverPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BladedancePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BladedancePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBladedancePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BladedancePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBladedancePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BladedancePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction BladedancePvE => _BladedancePvECreator.Value;

    /// <inheritdoc cref="BladedancePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak2 => BladedancePvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ChimatsuriPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ChimatsuriPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyChimatsuriPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ChimatsuriPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyChimatsuriPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ChimatsuriPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction ChimatsuriPvE => _ChimatsuriPvECreator.Value;

    /// <inheritdoc cref="ChimatsuriPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak3 => ChimatsuriPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction[]? _AllBaseActions = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Actions.IBaseAction[] AllBaseActions => _AllBaseActions ??= [SpinningEdgePvE, ShadeShiftPvE, GustSlashPvE, HidePvE, AssassinatePvE, ThrowingDaggerPvE, MugPvE, DeathBlossomPvE, AeolianEdgePvE, TrickAttackPvE, TenPvE, NinjutsuPvE, ChiPvE, ShukuchiPvE, JinPvE, KassatsuPvE, FumaShurikenPvE, KatonPvE, RaitonPvE, HyotonPvE, HutonPvE, DotonPvE, SuitonPvE, RabbitMediumPvE, ArmorCrushPvE, DreamWithinADreamPvE, HellfrogMediumPvE, BhavacakraPvE, TenChiJinPvE, HakkeMujinsatsuPvE, MeisuiPvE, GokaMekkyakuPvE, HyoshoRanryuPvE, BunshinPvE, PhantomKamaitachiPvE, HollowNozuchiPvE, ForkedRaijuPvE, FleetingRaijuPvE, HuraijinPvE, SpinningEdgePvP, GustSlashPvP, AeolianEdgePvP, AssassinatePvP, GokaMekkyakuPvP, FumaShurikenPvP, HyoshoRanryuPvP, ThreeMudraPvP, MeisuiPvP, MugPvP, ForkedRaijuPvP, BunshinPvP, HutonPvP, ShukuchiPvP, DotonPvP, SeitonTenchuPvP, FleetingRaijuPvP, LimitBreak1, LimitBreak2, LimitBreak3, ..base.AllBaseActions];
}