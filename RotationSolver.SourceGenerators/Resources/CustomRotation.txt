// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations;
/// <summary>
/// The Custom Rotation.
/// <br>Number of Actions: 48</br>
/// </summary>
public abstract partial class CustomRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SprintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SprintPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySprintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SprintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySprintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SprintPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SprintPvE => _SprintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TeleportPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TeleportPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTeleportPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TeleportPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTeleportPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TeleportPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TeleportPvE => _TeleportPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReturnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReturnPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyReturnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReturnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyReturnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReturnPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReturnPvE => _ReturnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DecipherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DecipherPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDecipherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DecipherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDecipherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DecipherPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DecipherPvE => _DecipherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DigPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DigPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDigPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DigPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDigPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DigPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DigPvE => _DigPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RampartPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RampartPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRampartPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RampartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRampartPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RampartPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction RampartPvE => _RampartPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ProvokePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ProvokePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyProvokePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ProvokePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyProvokePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ProvokePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ProvokePvE => _ProvokePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReprisalPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReprisalPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyReprisalPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReprisalPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyReprisalPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReprisalPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReprisalPvE => _ReprisalPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShirkPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShirkPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyShirkPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShirkPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyShirkPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShirkPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ShirkPvE => _ShirkPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _InterjectPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.InterjectPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyInterjectPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="InterjectPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyInterjectPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.InterjectPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction InterjectPvE => _InterjectPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LowBlowPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LowBlowPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLowBlowPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LowBlowPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLowBlowPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LowBlowPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction LowBlowPvE => _LowBlowPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SecondWindPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SecondWindPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySecondWindPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SecondWindPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySecondWindPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SecondWindPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SecondWindPvE => _SecondWindPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BloodbathPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BloodbathPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyBloodbathPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BloodbathPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyBloodbathPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BloodbathPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction BloodbathPvE => _BloodbathPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TrueNorthPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TrueNorthPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyTrueNorthPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TrueNorthPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyTrueNorthPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TrueNorthPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction TrueNorthPvE => _TrueNorthPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ArmsLengthPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ArmsLengthPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyArmsLengthPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ArmsLengthPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyArmsLengthPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ArmsLengthPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ArmsLengthPvE => _ArmsLengthPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FeintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FeintPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFeintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FeintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFeintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FeintPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FeintPvE => _FeintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeadGrazePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeadGrazePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyHeadGrazePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeadGrazePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyHeadGrazePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeadGrazePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction HeadGrazePvE => _HeadGrazePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FootGrazePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FootGrazePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFootGrazePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FootGrazePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFootGrazePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FootGrazePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FootGrazePvE => _FootGrazePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LegGrazePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LegGrazePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLegGrazePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LegGrazePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLegGrazePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LegGrazePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction LegGrazePvE => _LegGrazePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PelotonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PelotonPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPelotonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PelotonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPelotonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PelotonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction PelotonPvE => _PelotonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SurecastPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SurecastPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySurecastPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SurecastPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySurecastPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SurecastPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SurecastPvE => _SurecastPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AddlePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AddlePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyAddlePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AddlePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyAddlePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AddlePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction AddlePvE => _AddlePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftcastPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SwiftcastPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySwiftcastPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftcastPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySwiftcastPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftcastPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftcastPvE => _SwiftcastPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LucidDreamingPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LucidDreamingPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLucidDreamingPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LucidDreamingPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLucidDreamingPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LucidDreamingPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction LucidDreamingPvE => _LucidDreamingPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EsunaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EsunaPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyEsunaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EsunaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyEsunaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EsunaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction EsunaPvE => _EsunaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RescuePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RescuePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRescuePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RescuePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRescuePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RescuePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction RescuePvE => _RescuePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LegSweepPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LegSweepPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLegSweepPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LegSweepPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLegSweepPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LegSweepPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction LegSweepPvE => _LegSweepPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OpticalSightPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.OpticalSightPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyOpticalSightPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OpticalSightPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyOpticalSightPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OpticalSightPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction OpticalSightPvP => _OpticalSightPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SpinCrusherPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SpinCrusherPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySpinCrusherPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SpinCrusherPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySpinCrusherPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SpinCrusherPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SpinCrusherPvP => _SpinCrusherPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LaserXSwordPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LaserXSwordPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyLaserXSwordPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LaserXSwordPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyLaserXSwordPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LaserXSwordPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction LaserXSwordPvP => _LaserXSwordPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> __3000TonzeMissilePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID._3000TonzeMissilePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        Modify_3000TonzeMissilePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="_3000TonzeMissilePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void Modify_3000TonzeMissilePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID._3000TonzeMissilePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction _3000TonzeMissilePvP => __3000TonzeMissilePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SteamReleasePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SteamReleasePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySteamReleasePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SteamReleasePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySteamReleasePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SteamReleasePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SteamReleasePvP => _SteamReleasePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FlarethrowerPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FlarethrowerPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyFlarethrowerPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FlarethrowerPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyFlarethrowerPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FlarethrowerPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction FlarethrowerPvP => _FlarethrowerPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DoubleRocketPunchPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DoubleRocketPunchPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDoubleRocketPunchPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DoubleRocketPunchPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDoubleRocketPunchPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DoubleRocketPunchPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DoubleRocketPunchPvP => _DoubleRocketPunchPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MegaBeamPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.MegaBeamPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyMegaBeamPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MegaBeamPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyMegaBeamPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MegaBeamPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction MegaBeamPvP => _MegaBeamPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CeruleumRefillPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CeruleumRefillPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyCeruleumRefillPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CeruleumRefillPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyCeruleumRefillPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CeruleumRefillPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction CeruleumRefillPvP => _CeruleumRefillPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DismountPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DismountPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyDismountPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DismountPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyDismountPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DismountPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction DismountPvP => _DismountPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReturnPvE_10061Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReturnPvE_10061, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyReturnPvE_10061(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReturnPvE_10061"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyReturnPvE_10061(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReturnPvE_10061"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReturnPvE_10061 => _ReturnPvE_10061Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReposePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReposePvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyReposePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReposePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyReposePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReposePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReposePvE => _ReposePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SleepPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SleepPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySleepPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SleepPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySleepPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SleepPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SleepPvE => _SleepPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GuardPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GuardPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGuardPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GuardPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGuardPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GuardPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GuardPvP => _GuardPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StandardissueElixirPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StandardissueElixirPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyStandardissueElixirPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StandardissueElixirPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyStandardissueElixirPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StandardissueElixirPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction StandardissueElixirPvP => _StandardissueElixirPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PurifyPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.PurifyPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyPurifyPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PurifyPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyPurifyPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PurifyPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction PurifyPvP => _PurifyPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SprintPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SprintPvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifySprintPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SprintPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifySprintPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SprintPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction SprintPvP => _SprintPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _IsleReturnPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.IsleReturnPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyIsleReturnPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="IsleReturnPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyIsleReturnPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.IsleReturnPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction IsleReturnPvE => _IsleReturnPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RecuperatePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RecuperatePvP, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyRecuperatePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RecuperatePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyRecuperatePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RecuperatePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction RecuperatePvP => _RecuperatePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GuardPvP_29735Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GuardPvP_29735, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyGuardPvP_29735(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GuardPvP_29735"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyGuardPvP_29735(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GuardPvP_29735"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction GuardPvP_29735 => _GuardPvP_29735Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _IsleSprintPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.IsleSprintPvE, false);
        CustomRotation.LoadActionSetting(ref action);
        var setting = action.Setting;
        ModifyIsleSprintPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="IsleSprintPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    static partial void ModifyIsleSprintPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.IsleSprintPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseAction IsleSprintPvE => _IsleSprintPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfElixirCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4559U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4559"><strong>Elixir</strong></see> [4559]
/// <para>This special blend of herbal extracts and aetheric essence rejuvenates body and mind, instantly restoring HP and MP.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfElixir => _BottleOfElixirCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfHielixirCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4560U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4560"><strong>Hi-Elixir</strong></see> [4560]
/// <para>This special blend of herbal extracts and aetheric essence rejuvenates body and mind, instantly restoring HP and MP.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfHielixir => _BottleOfHielixirCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfAntidoteCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4564U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4564"><strong>Antidote</strong></see> [4564]
/// <para>This alchemically crafted restorative instantly cures most instances of poison.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfAntidote => _BottleOfAntidoteCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfEyeDropsCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4565U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4565"><strong>Eye Drops</strong></see> [4565]
/// <para>This alchemically crafted restorative instantly cures most instances of blindness.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfEyeDrops => _BottleOfEyeDropsCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfEchoDropsCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4566U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4566"><strong>Echo Drops</strong></see> [4566]
/// <para>This alchemically crafted restorative instantly cures most instances of silence.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfEchoDrops => _BottleOfEchoDropsCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfSmellingSaltsCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4567U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4567"><strong>Smelling Salts</strong></see> [4567]
/// <para>This alchemically crafted restorative instantly rouses most sleeping targets.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfSmellingSalts => _BottleOfSmellingSaltsCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _BottleOfSpineDropsCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4568U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4568"><strong>Spine Drops</strong></see> [4568]
/// <para>This alchemically crafted restorative instantly cures most instances of paralysis.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem BottleOfSpineDrops => _BottleOfSpineDropsCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _GoldNeedleCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4569U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4569"><strong>Gold Needle</strong></see> [4569]
/// <para>The properties of this solid-gold needle include curing petrification and pricking fingers.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem GoldNeedle => _GoldNeedleCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _TuftOfPhoenixDownCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4570U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4570"><strong>Phoenix Down</strong></see> [4570]
/// <para>The billowy plumage of the fledgling Phoenix─a legendary bird that, upon each fiery death, is said to rise from its own ashes in a literal “blaze of glory.” When placed upon the body of one who is incapacitated, it will instantly revive the person. While some cultures insist that the tailfeather's restorative properties trump those of down, these claims have yet to be proven in any sort of scientific capacity.</para>
/// <para></para>
/// <para>※Cannot be used during battle.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem TuftOfPhoenixDown => _TuftOfPhoenixDownCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _FireWardPotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4614U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4614"><strong>Fire Ward Potion</strong></see> [4614]
/// <para>Everyone knows this elementally charged concoction slightly increases resistance to fire-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem FireWardPotion => _FireWardPotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _IceWardPotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4615U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4615"><strong>Ice Ward Potion</strong></see> [4615]
/// <para>Everyone knows this elementally charged concoction slightly increases resistance to ice-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem IceWardPotion => _IceWardPotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _WindWardPotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4616U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4616"><strong>Wind Ward Potion</strong></see> [4616]
/// <para>Everyone knows this elementally charged concoction slightly increases resistance to wind-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem WindWardPotion => _WindWardPotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _EarthWardPotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4617U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4617"><strong>Earth Ward Potion</strong></see> [4617]
/// <para>Everyone knows this elementally charged concoction slightly increases resistance to earth-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem EarthWardPotion => _EarthWardPotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _LightningWardPotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4618U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4618"><strong>Lightning Ward Potion</strong></see> [4618]
/// <para>Everyone knows this elementally charged concoction slightly increases resistance to lightning-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem LightningWardPotion => _LightningWardPotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _WaterWardPotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4619U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4619"><strong>Water Ward Potion</strong></see> [4619]
/// <para>Everyone knows this elementally charged concoction slightly increases resistance to water-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem WaterWardPotion => _WaterWardPotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _FireWardHipotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4620U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4620"><strong>Fire Ward Hi-Potion</strong></see> [4620]
/// <para>Everyone knows this elementally charged concoction increases resistance to fire-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem FireWardHipotion => _FireWardHipotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _IceWardHipotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4621U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4621"><strong>Ice Ward Hi-Potion</strong></see> [4621]
/// <para>Everyone knows this elementally charged concoction increases resistance to ice-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem IceWardHipotion => _IceWardHipotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _WindWardHipotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4622U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4622"><strong>Wind Ward Hi-Potion</strong></see> [4622]
/// <para>Everyone knows this elementally charged concoction increases resistance to wind-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem WindWardHipotion => _WindWardHipotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _EarthWardHipotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4623U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4623"><strong>Earth Ward Hi-Potion</strong></see> [4623]
/// <para>Everyone knows this elementally charged concoction increases resistance to earth-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem EarthWardHipotion => _EarthWardHipotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _LightningWardHipotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4624U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4624"><strong>Lightning Ward Hi-Potion</strong></see> [4624]
/// <para>Everyone knows this elementally charged concoction increases resistance to lightning-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem LightningWardHipotion => _LightningWardHipotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _WaterWardHipotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4625U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4625"><strong>Water Ward Hi-Potion</strong></see> [4625]
/// <para>Everyone knows this elementally charged concoction increases resistance to water-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem WaterWardHipotion => _WaterWardHipotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _FireWardMegapotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4626U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4626"><strong>Fire Ward Mega-Potion</strong></see> [4626]
/// <para>Everyone knows this elementally charged concoction significantly increases resistance to fire-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem FireWardMegapotion => _FireWardMegapotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _IceWardMegapotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4627U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4627"><strong>Ice Ward Mega-Potion</strong></see> [4627]
/// <para>Everyone knows this elementally charged concoction significantly increases resistance to ice-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem IceWardMegapotion => _IceWardMegapotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _WindWardMegapotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4628U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4628"><strong>Wind Ward Mega-Potion</strong></see> [4628]
/// <para>Everyone knows this elementally charged concoction significantly increases resistance to wind-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem WindWardMegapotion => _WindWardMegapotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _EarthWardMegapotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4629U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4629"><strong>Earth Ward Mega-Potion</strong></see> [4629]
/// <para>Everyone knows this elementally charged concoction significantly increases resistance to earth-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem EarthWardMegapotion => _EarthWardMegapotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _LightningWardMegapotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4630U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4630"><strong>Lightning Ward Mega-Potion</strong></see> [4630]
/// <para>Everyone knows this elementally charged concoction significantly increases resistance to lightning-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem LightningWardMegapotion => _LightningWardMegapotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _WaterWardMegapotionCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(4631U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/4631"><strong>Water Ward Mega-Potion</strong></see> [4631]
/// <para>Everyone knows this elementally charged concoction significantly increases resistance to water-aspected damage. What few people know, however, is that after long periods of disuse, the liquid undergoes a natural alchemical transformation that grants it the same coloring properties as common dye.</para>
/// <para></para>
/// <para>Cannot be opened in instanced areas such as dungeons, PvP areas, or raids.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem WaterWardMegapotion => _WaterWardMegapotionCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _VialOfCordialCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(6141U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/6141"><strong>Cordial</strong></see> [6141]
/// <para>A sweet, fermented concoction that instantly restores 300 GP (350 if the cordial is of high quality).</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem VialOfCordial => _VialOfCordialCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _PhialOfRetainerFantasiaCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(8841U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/8841"><strong>Retainer Fantasia</strong></see> [8841]
/// <para>Legend states that any who drink this mysterious liquid before lying down for the evening will awaken a new man (or woman).</para>
/// <para></para>
/// <para>Grants you a single opportunity to edit your retainer's appearance when speaking to a retainer vocate.</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem PhialOfRetainerFantasia => _PhialOfRetainerFantasiaCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseItem> _VialOfWateredCordialCreator = new(() => new global::RotationSolver.Basic.Actions.BaseItem(16911U));
    /// <summary>
/// <see href="https://garlandtools.org/db/#item/16911"><strong>Watered Cordial</strong></see> [16911]
/// <para>A sweet, fermented concoction that instantly restores 150 GP (200 if the cordial is of high quality).</para>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "4.2.6.5")]
    public global::RotationSolver.Basic.Actions.IBaseItem VialOfWateredCordial => _VialOfWateredCordialCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseAction[]? _AllBaseActions = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    /// <inheritdoc/>
    public virtual global::RotationSolver.Basic.Actions.IBaseAction[] AllBaseActions => _AllBaseActions ??= [SprintPvE, TeleportPvE, ReturnPvE, DecipherPvE, DigPvE, RampartPvE, ProvokePvE, ReprisalPvE, ShirkPvE, InterjectPvE, LowBlowPvE, SecondWindPvE, BloodbathPvE, TrueNorthPvE, ArmsLengthPvE, FeintPvE, HeadGrazePvE, FootGrazePvE, LegGrazePvE, PelotonPvE, SurecastPvE, AddlePvE, SwiftcastPvE, LucidDreamingPvE, EsunaPvE, RescuePvE, LegSweepPvE, OpticalSightPvP, SpinCrusherPvP, LaserXSwordPvP, _3000TonzeMissilePvP, SteamReleasePvP, FlarethrowerPvP, DoubleRocketPunchPvP, MegaBeamPvP, CeruleumRefillPvP, DismountPvP, ReposePvE, SleepPvE, GuardPvP, StandardissueElixirPvP, PurifyPvP, SprintPvP, IsleReturnPvE, RecuperatePvP, IsleSprintPvE];

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    private global::RotationSolver.Basic.Actions.IBaseItem[]? _AllItems = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "4.2.6.5")]
    /// <inheritdoc/>
    public global::RotationSolver.Basic.Actions.IBaseItem[] AllItems => _AllItems ??= [BottleOfElixir, BottleOfHielixir, BottleOfAntidote, BottleOfEyeDrops, BottleOfEchoDrops, BottleOfSmellingSalts, BottleOfSpineDrops, GoldNeedle, TuftOfPhoenixDown, FireWardPotion, IceWardPotion, WindWardPotion, EarthWardPotion, LightningWardPotion, WaterWardPotion, FireWardHipotion, IceWardHipotion, WindWardHipotion, EarthWardHipotion, LightningWardHipotion, WaterWardHipotion, FireWardMegapotion, IceWardMegapotion, WindWardMegapotion, EarthWardMegapotion, LightningWardMegapotion, WaterWardMegapotion, VialOfCordial, PhialOfRetainerFantasia, VialOfWateredCordial];
}